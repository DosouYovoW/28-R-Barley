---
title: "Untitled"
format: html
editor: visual
---

# Data exploration

## New data for model interaction

```{r}
pgr_trt_name = c("No_PGR", "M62.5_21-24", "M62.5_30-32", "M125_30-32", "M62.5_37",
                 "M125_37", "M62.5_21-24 + M62.5_37", "M62.5_21-24 + M62.5_30-32",
                 "M62.5_30-32 + M62.5_37")
cultivation_cost_dollar = c(402.2, 411.7, 421.2, 430.7, 411.7,
                            421.2, 421.2, 430.7, 430.7)
econonmic_data <- data.frame(pgr_trt_name, cultivation_cost_dollar)
```


```{r}
data_int <- cleaned_data_imputed %>% 
  left_join(econonmic_data) %>% 
  mutate(gross_return = yield_bu_acre * 5.85,
         net_return = gross_return - cultivation_cost_dollar) %>% 
  mutate(PGR_dose = case_when(
    pgr_trt_name == "No_PGR" ~ 0,
    pgr_trt_name %in% c("M62.5_21-24", "M62.5_30-32", "M62.5_37") ~ 62.5,
    .default = 125
  ),
  PGR_growth_stage = case_when(
     pgr_trt_name == "No_PGR" ~ "Control",
     pgr_trt_name == "M62.5_21-24" ~ "GS 21-24 (ET)",
     pgr_trt_name %in% c("M62.5_30-32", "M125_30-32") ~ "GS 30-32 (SE)",
     pgr_trt_name %in% c("M62.5_37", "M125_37") ~ "GS 37 (FLE)",
     pgr_trt_name == "M62.5_21-24 + M62.5_37" ~ "GS 21-24 (ET) + GS 37 (FLE)",
     pgr_trt_name == "M62.5_21-24 + M62.5_30-32" ~ "GS 21-24 (ET) + GS 30-32 (SE)",
     pgr_trt_name == "M62.5_30-32 + M62.5_37" ~ "GS 30-32 (SE) + GS 37 (FLE)"
  )
  )
data_int
```

## Yield Mixed modeling
### Bu/acre
```{r}
# Set a random seed for reproducibility
set.seed(123)

# Fit the mixed model with year & location as random effects
reg_mod_int_yield_buacre <- lmer(yield_bu_acre ~ cultivar * PGR_dose + PGR_growth_stage +
                (1 | year) + (1 | location), 
                data = data_int %>% mutate(pgr_trt_name = fct_relevel(pgr_trt_name, "No_PGR"),
                                       cultivar = fct_relevel(cultivar, "CDC_Austenson")))

# Extract fixed effects with p-values
fixed_effects <- broom.mixed::tidy(reg_mod_int_yield_buacre, effects = "fixed") %>%
  filter(term != "(Intercept)")

# Extract confidence intervals for fixed effects
conf_int <- confint(reg_mod_int_yield_buacre, method = "Wald") %>%  # Compute 95% CIs
  as.data.frame() %>%
  rownames_to_column("term") %>%
  filter(term %in% fixed_effects$term) %>%
  rename(ci_lower = `2.5 %`, ci_upper = `97.5 %`)

# Merge CIs with fixed effects
fixed_effects <- fixed_effects %>%
  left_join(conf_int, by = "term") %>%
  mutate(
    p_signif = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01  ~ "**",
      p.value < 0.05  ~ "*",
      TRUE ~ ""
    )
  )

# Extract random effects (variance components) - No p-values here
random_effects <- broom.mixed::tidy(reg_mod_int_yield_buacre, effects = "ran_pars") %>%
  select(-term) %>% 
  rename(term = group) %>% 
  mutate(
    term = str_replace(term, "sd__", ""),  # Clean term names
    effect = "Random",
    p_signif = "",  # No p-values for random effects
    ci_lower = NA,  # No CIs for random effects
    ci_upper = NA
  )

# Combine fixed and random effects
model_results <- bind_rows(fixed_effects, random_effects)

# Assign grouping categories
model_results <- model_results %>%
  filter(term != "Residual") %>%
  mutate(category = case_when(
    grepl("location", term) ~ "Random Factors",
    grepl("year", term) ~ "Random Factors",
    term %in% c("cultivarAB_Hague", "cultivarEsma") ~ "Cultivar",
    term == "PGR_dose" ~ "PGR Dose",
    term %in% c("cultivarAB_Hague:PGR_dose", "cultivarEsma:PGR_dose", "cultivarCDC_Austenson:PGR_dose") ~ "Cultivar x PGR Dose",
    grepl("PGR_growth_stage", term) ~ "PGR Application Stage",
    TRUE ~ "Other"
  )) %>% 
  mutate(category = fct_relevel(category, "Random Factors"),  # Convert to factor for correct order
         significant_or_not = case_when(p.value < 0.05 ~ "Significant",
                                        p.value >= 0.05 ~ "Not Significant",
                                        .default = "other"
           
         )) %>% 
  mutate(term = case_when(
    term == "cultivarAB_Hague" ~ "AB Hague",
     term == "cultivarEsma" ~ "Esma",
    term == "PGR_dose" ~ "PGR Rate",
    term == "cultivarAB_Hague:PGR_dose" ~ "AB Hague x PGR Dose",
    term == "cultivarEsma:PGR_dose" ~ "Esma x PGR Dose",
    term == "cultivarCDC_Austenson:PGR_dose" ~ "CDC Austenson x PGR Dose",
    term == "PGR_growth_stageGS 21-24 (ET)" ~ "GS 21-24 (ET)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 37 (FLE)" ~ "GS 21-24 (ET) + GS 37 (FLE)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 30-32 (SE)" ~ "GS 21-24 (ET) + GS 30-32 (SE)",
    term == "PGR_growth_stageGS 37 (FLE)" ~ "GS 37 (FLE)",
    term == "PGR_growth_stageGS 30-32 (SE)" ~ "GS 30-32 (SE)",
    term == "PGR_growth_stageGS 30-32 (SE) + GS 37 (FLE)" ~ "GS 30-32 (SE) + GS 37 (FLE)",
    TRUE ~ term
  )) 


```

```{r}
# Apply manual order to the "term" column for PGR treatments only
#model_results <- model_results %>%
# Plot with significance stars and confidence intervals
# Define custom order for PGR treatments
custom_order_2 <- c("Random Factors", 
                  "Year", 
                  "Cultivar",
                  "PGR Dose",
                  "Cultivar x PGR Dose",
                  "PGR Application Stage")

custom_order_3 <- c("GS 30-32 (SE) + GS 37 (FLE)",
                    "GS 21-24 (ET) + GS 37 (FLE)",
                     "GS 21-24 (ET) + GS 30-32 (SE)",
                     "GS 37 (FLE)",
                     "GS 30-32 (SE)", 
                    "GS 21-24 (ET)"
                  )

model_results <- model_results %>% 
  
  mutate(effect = recode(effect,
                         "fixed" = "Fixed"), 
         term = recode(term,
                       "year" = "Year",
                       "location" = "Location"),
    category = fct_relevel(category, custom_order_2),
         term = fct_relevel(term, custom_order_3))
ggplot(model_results, aes(x = estimate, y = term, shape = effect, color = significant_or_not)) +
  geom_point(size = 2) +
  geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.2) +  # Confidence intervals
  geom_text(aes(label = paste(round(estimate, 2), p_signif)), hjust = 0.5, vjust = -0.8, size = 3, fontface = "bold", show.legend = F) +  # Add estimate & p-value stars
  facet_grid(category ~., scales = "free_y", space = "free_y") +  # Group by category
  geom_vline(xintercept = 0, lwd = 0.2, linetype = "dashed") +  # Vertical line at zero
  scale_shape_manual(values = c(16, 17)) +  # Different shapes for fixed and random effects
  scale_color_manual(values = c("gray60", "red3", "green4")) +  # Different colors for fixed and random
  labs(title = "",
       x = "Mixed Model Estimated Effect (Bu/acre)", y = "", caption = expression("GS - Growth Stage; ET - Early Tillering; SE - Stem Elongation; FLE - Flag Leaf Emergence; " * italic("p-value") < 0.05 ~ "*"),
       shape = "Effect Type", color = "P-Value") +
 coord_cartesian(xlim = c(-10, 55))+
  theme_bw()+
  guides(color = "none")+
  theme(strip.text.y = element_text(angle = 0),
        plot.caption.position = "plot",  # ensures caption is treated as a plot component
    plot.caption = element_text(hjust = 0.5))
ggsave("figure/yield_bu_ac/Yield_interac_mixed_modeling_1.png", width = 8, height = 5, dpi = 600)
```

### Kg/ha
```{r}
# Set a random seed for reproducibility
set.seed(123)

# Fit the mixed model with year & location as random effects
reg_mod_int_yield_kgha <- lmer(yield_adj_to_13_5_percent ~ cultivar * PGR_dose + PGR_growth_stage +
                (1 | year) + (1 | location), 
                data = data_int %>% mutate(pgr_trt_name = fct_relevel(pgr_trt_name, "No_PGR"),
                                       cultivar = fct_relevel(cultivar, "CDC_Austenson")))

# Extract fixed effects with p-values
fixed_effects <- broom.mixed::tidy(reg_mod_int_yield_kgha, effects = "fixed") %>%
  filter(term != "(Intercept)")

# Extract confidence intervals for fixed effects
conf_int <- confint(reg_mod_int_yield_kgha, method = "Wald") %>%  # Compute 95% CIs
  as.data.frame() %>%
  rownames_to_column("term") %>%
  filter(term %in% fixed_effects$term) %>%
  rename(ci_lower = `2.5 %`, ci_upper = `97.5 %`)

# Merge CIs with fixed effects
fixed_effects <- fixed_effects %>%
  left_join(conf_int, by = "term") %>%
  mutate(
    p_signif = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01  ~ "**",
      p.value < 0.05  ~ "*",
      TRUE ~ ""
    )
  )

# Extract random effects (variance components) - No p-values here
random_effects <- broom.mixed::tidy(reg_mod_int_yield_kgha, effects = "ran_pars") %>%
  select(-term) %>% 
  rename(term = group) %>% 
  mutate(
    term = str_replace(term, "sd__", ""),  # Clean term names
    effect = "Random",
    p_signif = "",  # No p-values for random effects
    ci_lower = NA,  # No CIs for random effects
    ci_upper = NA
  )

# Combine fixed and random effects
model_results <- bind_rows(fixed_effects, random_effects)

# Assign grouping categories
model_results <- model_results %>%
  filter(term != "Residual") %>%
  mutate(category = case_when(
    grepl("location", term) ~ "Random Factors",
    grepl("year", term) ~ "Random Factors",
    term %in% c("cultivarAB_Hague", "cultivarEsma") ~ "Cultivar",
    term == "PGR_dose" ~ "PGR Dose",
    term %in% c("cultivarAB_Hague:PGR_dose", "cultivarEsma:PGR_dose", "cultivarCDC_Austenson:PGR_dose") ~ "Cultivar x PGR Dose",
    grepl("PGR_growth_stage", term) ~ "PGR Application Stage",
    TRUE ~ "Other"
  )) %>% 
  mutate(category = fct_relevel(category, "Random Factors"),  # Convert to factor for correct order
         significant_or_not = case_when(p.value < 0.05 ~ "Significant",
                                        p.value >= 0.05 ~ "Not Significant",
                                        .default = "other"
           
         )) %>% 
  mutate(term = case_when(
    term == "cultivarAB_Hague" ~ "AB Hague",
     term == "cultivarEsma" ~ "Esma",
    term == "PGR_dose" ~ "PGR Rate",
    term == "cultivarAB_Hague:PGR_dose" ~ "AB Hague x PGR Dose",
    term == "cultivarEsma:PGR_dose" ~ "Esma x PGR Dose",
    term == "cultivarCDC_Austenson:PGR_dose" ~ "CDC Austenson x PGR Dose",
    term == "PGR_growth_stageGS 21-24 (ET)" ~ "GS 21-24 (ET)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 37 (FLE)" ~ "GS 21-24 (ET) + GS 37 (FLE)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 30-32 (SE)" ~ "GS 21-24 (ET) + GS 30-32 (SE)",
    term == "PGR_growth_stageGS 37 (FLE)" ~ "GS 37 (FLE)",
    term == "PGR_growth_stageGS 30-32 (SE)" ~ "GS 30-32 (SE)",
    term == "PGR_growth_stageGS 30-32 (SE) + GS 37 (FLE)" ~ "GS 30-32 (SE) + GS 37 (FLE)",
    TRUE ~ term
  )) 


```

```{r}
# Apply manual order to the "term" column for PGR treatments only
#model_results <- model_results %>%
# Plot with significance stars and confidence intervals
# Define custom order for PGR treatments
custom_order_2 <- c("Random Factors", 
                  "Year", 
                  "Cultivar",
                  "PGR Dose",
                  "Cultivar x PGR Dose",
                  "PGR Application Stage")

custom_order_3 <- c("GS 30-32 (SE) + GS 37 (FLE)",
                    "GS 21-24 (ET) + GS 37 (FLE)",
                     "GS 21-24 (ET) + GS 30-32 (SE)",
                     "GS 37 (FLE)",
                     "GS 30-32 (SE)", 
                    "GS 21-24 (ET)"
                  )

model_results <- model_results %>% 
  
  mutate(effect = recode(effect,
                         "fixed" = "Fixed"), 
         term = recode(term,
                       "year" = "Year",
                       "location" = "Location"),
    category = fct_relevel(category, custom_order_2),
         term = fct_relevel(term, custom_order_3))
ggplot(model_results, aes(x = estimate, y = term, shape = effect, color = significant_or_not)) +
  geom_point(size = 2) +
  geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.2) +  # Confidence intervals
  geom_text(aes(label = paste(round(estimate, 2), p_signif)), hjust = 0.5, vjust = -0.8, size = 3, fontface = "bold", show.legend = F) +  # Add estimate & p-value stars
  facet_grid(category ~., scales = "free_y", space = "free_y") +  # Group by category
  geom_vline(xintercept = 0, lwd = 0.2, linetype = "dashed") +  # Vertical line at zero
  scale_shape_manual(values = c(16, 17)) +  # Different shapes for fixed and random effects
  scale_color_manual(values = c("gray60", "red3", "green4")) +  # Different colors for fixed and random
  labs(title = "",
       x = "Mixed Model Estimated Effect (kg/ha)", y = "", caption = expression("GS - Growth Stage; ET - Early Tillering; SE - Stem Elongation; FLE - Flag Leaf Emergence; " * italic("p-value") < 0.05 ~ "*"),
       shape = "Effect Type", color = "P-Value") +
  coord_cartesian(xlim = c(-1000, 3000))+
  theme_bw()+
  guides(color = "none")+
  theme(strip.text.y = element_text(angle = 0),
        plot.caption.position = "plot",  # ensures caption is treated as a plot component
    plot.caption = element_text(hjust = 0.5))
ggsave("figure/yield/Yield_interac_mixed_modeling.png", width = 8, height = 5, dpi = 600)
```



### Economic analysis

```{r}
ggplotly(
data_int %>% 
  filter(!(location == "Vermilion" & net_return > 1500)) %>% 
  filter(!(location == "Falher" & net_return > 1100)) %>% 
  ggplot(aes(net_return, fill = pgr_trt_name))+
  geom_histogram(position = position_dodge())+
  facet_grid(location ~ cultivar)
)
```


```{r}
data_int_economic1 <- data_int %>% 
  filter(!(location == "Vermilion" & net_return > 1500)) %>% 
  filter(!(location == "Falher" & net_return > 1100)) 
# Set a random seed for reproducibility
set.seed(123)

# Fit the mixed model with year & location as random effects
reg_mod_int_yield_economic <- lmer(net_return ~ cultivar * PGR_dose + PGR_growth_stage +
                (1 | year) + (1 | location), 
                data = data_int_economic1 %>% mutate(pgr_trt_name = fct_relevel(pgr_trt_name, "No_PGR"),
                                       cultivar = fct_relevel(cultivar, "CDC_Austenson")))

# Extract fixed effects with p-values
fixed_effects <- broom.mixed::tidy(reg_mod_int_yield_economic, effects = "fixed") %>%
  filter(term != "(Intercept)")

# Extract confidence intervals for fixed effects
conf_int <- confint(reg_mod_int_yield_economic, method = "Wald", level = 0.95) %>%  # Compute 95% CIs
  as.data.frame() %>%
  rownames_to_column("term") %>%
  filter(term %in% fixed_effects$term) %>%
  rename(ci_lower = `2.5 %`, ci_upper = `97.5 %`)

# Merge CIs with fixed effects
fixed_effects <- fixed_effects %>%
  left_join(conf_int, by = "term") %>%
  mutate(
    p_signif = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01  ~ "**",
      p.value < 0.05  ~ "*",
      TRUE ~ ""
    )
  )

# Extract random effects (variance components) - No p-values here
random_effects <- broom.mixed::tidy(reg_mod_int_yield_economic, effects = "ran_pars") %>%
  select(-term) %>% 
  rename(term = group) %>% 
  mutate(
    term = str_replace(term, "sd__", ""),  # Clean term names
    effect = "Random",
    p_signif = "",  # No p-values for random effects
    ci_lower = NA,  # No CIs for random effects
    ci_upper = NA
  )

# Combine fixed and random effects
model_results <- bind_rows(fixed_effects, random_effects)

# Assign grouping categories
model_results <- model_results %>%
  filter(term != "Residual") %>%
  mutate(category = case_when(
    grepl("location", term) ~ "Random Factors",
    grepl("year", term) ~ "Random Factors",
    term %in% c("cultivarAB_Hague", "cultivarEsma") ~ "Cultivar",
    term == "PGR_dose" ~ "PGR Dose",
    term %in% c("cultivarAB_Hague:PGR_dose", "cultivarEsma:PGR_dose", "cultivarCDC_Austenson:PGR_dose") ~ "Cultivar x PGR Dose",
    grepl("PGR_growth_stage", term) ~ "PGR Application Stage",
    TRUE ~ "Other"
  )) %>% 
  mutate(category = fct_relevel(category, "Random Factors"),  # Convert to factor for correct order
         significant_or_not = case_when(p.value < 0.05 ~ "Significant",
                                        p.value >= 0.05 ~ "Not Significant",
                                        .default = "other"
           
         )) %>% 
  mutate(term = case_when(
    term == "cultivarAB_Hague" ~ "AB Hague",
     term == "cultivarEsma" ~ "Esma",
    term == "PGR_dose" ~ "PGR Rate",
    term == "cultivarAB_Hague:PGR_dose" ~ "AB Hague x PGR Dose",
    term == "cultivarEsma:PGR_dose" ~ "Esma x PGR Dose",
    term == "cultivarCDC_Austenson:PGR_dose" ~ "CDC Austenson x PGR Dose",
    term == "PGR_growth_stageGS 21-24 (ET)" ~ "GS 21-24 (ET)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 37 (FLE)" ~ "GS 21-24 (ET) + GS 37 (FLE)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 30-32 (SE)" ~ "GS 21-24 (ET) + GS 30-32 (SE)",
    term == "PGR_growth_stageGS 37 (FLE)" ~ "GS 37 (FLE)",
    term == "PGR_growth_stageGS 30-32 (SE)" ~ "GS 30-32 (SE)",
    term == "PGR_growth_stageGS 30-32 (SE) + GS 37 (FLE)" ~ "GS 30-32 (SE) + GS 37 (FLE)",
    TRUE ~ term
  )) 


```

```{r}
# Apply manual order to the "term" column for PGR treatments only
#model_results <- model_results %>%
# Plot with significance stars and confidence intervals
# Define custom order for PGR treatments
custom_order_2 <- c("Random Factors", 
                  "Year", 
                  "Cultivar",
                  "PGR Dose",
                  "Cultivar x PGR Dose",
                  "PGR Application Stage")

custom_order_3 <- c("GS 30-32 (SE) + GS 37 (FLE)",
                    "GS 21-24 (ET) + GS 37 (FLE)",
                     "GS 21-24 (ET) + GS 30-32 (SE)",
                     "GS 37 (FLE)",
                     "GS 30-32 (SE)", 
                    "GS 21-24 (ET)"
                  )

model_results <- model_results %>% 
  
  mutate(effect = recode(effect,
                         "fixed" = "Fixed"), 
         term = recode(term,
                       "year" = "Year",
                       "location" = "Location"),
    category = fct_relevel(category, custom_order_2),
         term = fct_relevel(term, custom_order_3))
ggplot(model_results, aes(x = estimate, y = term, shape = effect, color = significant_or_not)) +
  geom_point(size = 2) +
  geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.2) +  # Confidence intervals
  geom_text(aes(label = paste(round(estimate, 2), p_signif)), hjust = -0.1, vjust = -0.8, size = 3, fontface = "bold", show.legend = F) +  # Add estimate & p-value stars
  facet_grid(category ~., scales = "free_y", space = "free_y") +  # Group by category
  geom_vline(xintercept = 0, lwd = 0.2, linetype = "dashed") +  # Vertical line at zero
  scale_shape_manual(values = c(16, 17)) +  # Different shapes for fixed and random effects
  scale_color_manual(values = c("gray60", "red3", "green4")) +  # Different colors for fixed and random
  labs(title = "",
       x = "Mixed Model Estimated Net return ($/acre)", y = "", caption = expression("GS - Growth Stage; ET - Early Tillering; SE - Stem Elongation; FLE - Flag Leaf Emergence; " * italic("p-value") < 0.05 ~ "*"),
       shape = "Effect Type", color = "P-Value") +
  coord_cartesian(xlim = c(-50, 380))+
  theme_bw()+
  guides(color = "none")+
  theme(strip.text.y = element_text(angle = 0),
        plot.caption.position = "plot",  # ensures caption is treated as a plot component
    plot.caption = element_text(hjust = 0.5))
ggsave("figure/yield_bu_ac/Economic_interac_mixed_modeling2.png", width = 8, height = 5, dpi = 600)
```
  



```{r}
#| eval: false
#| include: false
sjPlot::tab_model(reg_mod_int_yield_buacre)
```

```{r}
#| eval: false
#| include: false
#library(ggplot2)
#library(lme4)
# Extract residuals
residuals <- resid(reg_mod_int)

# Histogram of residuals
ggplot(data.frame(residuals), aes(x = residuals)) +
  geom_histogram(bins = 100, fill = "blue", alpha = 0.5, color = "black") +
  theme_minimal() +
  labs(title = "Histogram of Residuals", x = "Residuals", y = "Frequency")

```

## Plant hight Mixed modeling

```{r}
# Set a random seed for reproducibility
set.seed(123)

# Fit the mixed model with year & location as random effects
reg_mod_int_yield_plantheight <- lmer(avg_height_at_phys_maturity ~ cultivar * PGR_dose + PGR_growth_stage +
                (1 | year) + (1 | location), 
                data = data_int %>% mutate(pgr_trt_name = fct_relevel(pgr_trt_name, "No_PGR"),
                                       cultivar = fct_relevel(cultivar, "CDC_Austenson")))

# Extract fixed effects with p-values
fixed_effects <- broom.mixed::tidy(reg_mod_int_yield_plantheight, effects = "fixed") %>%
  filter(term != "(Intercept)")

# Extract confidence intervals for fixed effects
conf_int <- confint(reg_mod_int_yield_plantheight, method = "Wald") %>%  # Compute 95% CIs
  as.data.frame() %>%
  rownames_to_column("term") %>%
  filter(term %in% fixed_effects$term) %>%
  rename(ci_lower = `2.5 %`, ci_upper = `97.5 %`)

# Merge CIs with fixed effects
fixed_effects <- fixed_effects %>%
  left_join(conf_int, by = "term") %>%
  mutate(
    p_signif = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01  ~ "**",
      p.value < 0.05  ~ "*",
      TRUE ~ ""
    )
  )

# Extract random effects (variance components) - No p-values here
random_effects <- broom.mixed::tidy(reg_mod_int_yield_plantheight, effects = "ran_pars") %>%
  select(-term) %>% 
  rename(term = group) %>% 
  mutate(
    term = str_replace(term, "sd__", ""),  # Clean term names
    effect = "Random",
    p_signif = "",  # No p-values for random effects
    ci_lower = NA,  # No CIs for random effects
    ci_upper = NA
  )

# Combine fixed and random effects
model_results <- bind_rows(fixed_effects, random_effects)

# Assign grouping categories
model_results <- model_results %>%
  filter(term != "Residual") %>%
  mutate(category = case_when(
    grepl("location", term) ~ "Random Factors",
    grepl("year", term) ~ "Random Factors",
    term %in% c("cultivarAB_Hague", "cultivarEsma") ~ "Cultivar",
    term == "PGR_dose" ~ "PGR Dose",
    term %in% c("cultivarAB_Hague:PGR_dose", "cultivarEsma:PGR_dose", "cultivarCDC_Austenson:PGR_dose") ~ "Cultivar x PGR Dose",
    grepl("PGR_growth_stage", term) ~ "PGR Application Stage",
    TRUE ~ "Other"
  )) %>% 
  mutate(category = fct_relevel(category, "Random Factors"),  # Convert to factor for correct order
         significant_or_not = case_when(p.value < 0.05 ~ "Significant",
                                        p.value >= 0.05 ~ "Not Significant",
                                        .default = "other"
           
         )) %>% 
  mutate(term = case_when(
    term == "cultivarAB_Hague" ~ "AB Hague",
     term == "cultivarEsma" ~ "Esma",
    term == "PGR_dose" ~ "PGR Rate",
    term == "cultivarAB_Hague:PGR_dose" ~ "AB Hague x PGR Dose",
    term == "cultivarEsma:PGR_dose" ~ "Esma x PGR Dose",
    term == "cultivarCDC_Austenson:PGR_dose" ~ "CDC Austenson x PGR Dose",
    term == "PGR_growth_stageGS 21-24 (ET)" ~ "GS 21-24 (ET)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 37 (FLE)" ~ "GS 21-24 (ET) + GS 37 (FLE)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 30-32 (SE)" ~ "GS 21-24 (ET) + GS 30-32 (SE)",
    term == "PGR_growth_stageGS 37 (FLE)" ~ "GS 37 (FLE)",
    term == "PGR_growth_stageGS 30-32 (SE)" ~ "GS 30-32 (SE)",
    term == "PGR_growth_stageGS 30-32 (SE) + GS 37 (FLE)" ~ "GS 30-32 (SE) + GS 37 (FLE)",
    TRUE ~ term
  )) 
```

```{r}
# Apply manual order to the "term" column for PGR treatments only
#model_results <- model_results %>%
# Plot with significance stars and confidence intervals
# Define custom order for PGR treatments
custom_order_2 <- c("Random Factors", 
                  "Year", 
                  "Cultivar",
                  "PGR Dose",
                  "Cultivar x PGR Dose",
                  "PGR Application Stage")

custom_order_3 <- c("GS 30-32 (SE) + GS 37 (FLE)",
                    "GS 21-24 (ET) + GS 37 (FLE)",
                     "GS 21-24 (ET) + GS 30-32 (SE)",
                     "GS 37 (FLE)",
                     "GS 30-32 (SE)", 
                    "GS 21-24 (ET)"
                  )

model_results <- model_results %>% 
  
  mutate(effect = recode(effect,
                         "fixed" = "Fixed"), 
         term = recode(term,
                       "year" = "Year",
                       "location" = "Location"),
    category = fct_relevel(category, custom_order_2),
         term = fct_relevel(term, custom_order_3))
ggplot(model_results, aes(x = estimate, y = term, shape = effect, color = significant_or_not)) +
  geom_point(size = 2) +
  geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.2) +  # Confidence intervals
  geom_text(aes(label = paste(round(estimate, 2), p_signif)), hjust = 0.5, vjust = -0.8, size = 3, fontface = "bold", show.legend = F) +  # Add estimate & p-value stars
  facet_grid(category ~., scales = "free_y", space = "free_y") +  # Group by category
  geom_vline(xintercept = 0, lwd = 0.2, linetype = "dashed") +  # Vertical line at zero
  scale_shape_manual(values = c(16, 17)) +  # Different shapes for fixed and random effects
  scale_color_manual(values = c("gray60", "red3", "green4")) +  # Different colors for fixed and random
  labs(title = "",
       x = "Mixed Model Estimated Plant height (cm)", y = "", caption = expression("GS - Growth Stage; ET - Early Tillering; SE - Stem Elongation; FLE - Flag Leaf Emergence; " * italic("p-value") < 0.05 ~ "*"),
       shape = "Effect Type", color = "P-Value") +
  coord_cartesian(xlim = c(-20, 25))+
  theme_bw()+
  guides(color = "none")+
  theme(strip.text.y = element_text(angle = 0),
        plot.caption.position = "plot",  # ensures caption is treated as a plot component
    plot.caption = element_text(hjust = 0.5))
ggsave("figure/plant_heigh/plant_heigh_interac_mixed_modeling.png", width = 8, height = 5, dpi = 600)
```
  


```{r}
sjPlot::tab_model(reg_mod_int)
```

```{r}
#| eval: false
#| include: false
#library(ggplot2)
#library(lme4)
# Extract residuals
residuals <- resid(reg_mod_int)

# Histogram of residuals
ggplot(data.frame(residuals), aes(x = residuals)) +
  geom_histogram(bins = 100, fill = "blue", alpha = 0.5, color = "black") +
  theme_minimal() +
  labs(title = "Histogram of Residuals", x = "Residuals", y = "Frequency")

```

## Lodging Mixed modeling

```{r}
# Set a random seed for reproducibility
set.seed(123)

# Fit the mixed model with year & location as random effects
reg_mod_int_yield_lodging <- lmer(lodging_avg ~ cultivar * PGR_dose + PGR_growth_stage +
                (1 | year) + (1 | location), 
                data = data_int %>% mutate(pgr_trt_name = fct_relevel(pgr_trt_name, "No_PGR"),
                                       cultivar = fct_relevel(cultivar, "CDC_Austenson")))

# Extract fixed effects with p-values
fixed_effects <- broom.mixed::tidy(reg_mod_int_yield_lodging, effects = "fixed") %>%
  filter(term != "(Intercept)")

# Extract confidence intervals for fixed effects
conf_int <- confint(reg_mod_int_yield_lodging, method = "Wald") %>%  # Compute 95% CIs
  as.data.frame() %>%
  rownames_to_column("term") %>%
  filter(term %in% fixed_effects$term) %>%
  rename(ci_lower = `2.5 %`, ci_upper = `97.5 %`)

# Merge CIs with fixed effects
fixed_effects <- fixed_effects %>%
  left_join(conf_int, by = "term") %>%
  mutate(
    p_signif = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01  ~ "**",
      p.value < 0.05  ~ "*",
      TRUE ~ ""
    )
  )

# Extract random effects (variance components) - No p-values here
random_effects <- broom.mixed::tidy(reg_mod_int_yield_lodging, effects = "ran_pars") %>%
  select(-term) %>% 
  rename(term = group) %>% 
  mutate(
    term = str_replace(term, "sd__", ""),  # Clean term names
    effect = "Random",
    p_signif = "",  # No p-values for random effects
    ci_lower = NA,  # No CIs for random effects
    ci_upper = NA
  )

# Combine fixed and random effects
model_results <- bind_rows(fixed_effects, random_effects)

# Assign grouping categories
model_results <- model_results %>%
  filter(term != "Residual") %>%
  mutate(category = case_when(
    grepl("location", term) ~ "Random Factors",
    grepl("year", term) ~ "Random Factors",
    term %in% c("cultivarAB_Hague", "cultivarEsma") ~ "Cultivar",
    term == "PGR_dose" ~ "PGR Dose",
    term %in% c("cultivarAB_Hague:PGR_dose", "cultivarEsma:PGR_dose", "cultivarCDC_Austenson:PGR_dose") ~ "Cultivar x PGR Dose",
    grepl("PGR_growth_stage", term) ~ "PGR Application Stage",
    TRUE ~ "Other"
  )) %>% 
  mutate(category = fct_relevel(category, "Random Factors"),  # Convert to factor for correct order
         significant_or_not = case_when(p.value < 0.05 ~ "Significant",
                                        p.value >= 0.05 ~ "Not Significant",
                                        .default = "other"
           
         )) %>% 
  mutate(term = case_when(
    term == "cultivarAB_Hague" ~ "AB Hague",
     term == "cultivarEsma" ~ "Esma",
    term == "PGR_dose" ~ "PGR Rate",
    term == "cultivarAB_Hague:PGR_dose" ~ "AB Hague x PGR Dose",
    term == "cultivarEsma:PGR_dose" ~ "Esma x PGR Dose",
    term == "cultivarCDC_Austenson:PGR_dose" ~ "CDC Austenson x PGR Dose",
    term == "PGR_growth_stageGS 21-24 (ET)" ~ "GS 21-24 (ET)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 37 (FLE)" ~ "GS 21-24 (ET) + GS 37 (FLE)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 30-32 (SE)" ~ "GS 21-24 (ET) + GS 30-32 (SE)",
    term == "PGR_growth_stageGS 37 (FLE)" ~ "GS 37 (FLE)",
    term == "PGR_growth_stageGS 30-32 (SE)" ~ "GS 30-32 (SE)",
    term == "PGR_growth_stageGS 30-32 (SE) + GS 37 (FLE)" ~ "GS 30-32 (SE) + GS 37 (FLE)",
    TRUE ~ term
  )) 


```

```{r}
# Apply manual order to the "term" column for PGR treatments only
#model_results <- model_results %>%
# Plot with significance stars and confidence intervals
# Define custom order for PGR treatments
custom_order_2 <- c("Random Factors", 
                  "Year", 
                  "Cultivar",
                  "PGR Dose",
                  "Cultivar x PGR Dose",
                  "PGR Application Stage")

custom_order_3 <- c("GS 30-32 (SE) + GS 37 (FLE)",
                    "GS 21-24 (ET) + GS 37 (FLE)",
                     "GS 21-24 (ET) + GS 30-32 (SE)",
                     "GS 37 (FLE)",
                     "GS 30-32 (SE)", 
                    "GS 21-24 (ET)"
                  )

model_results <- model_results %>% 
  
  mutate(effect = recode(effect,
                         "fixed" = "Fixed"), 
         term = recode(term,
                       "year" = "Year",
                       "location" = "Location"),
    category = fct_relevel(category, custom_order_2),
         term = fct_relevel(term, custom_order_3))
ggplot(model_results, aes(x = estimate, y = term, shape = effect, color = significant_or_not)) +
  geom_point(size = 2) +
  geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.2) +  # Confidence intervals
  geom_text(aes(label = paste(round(estimate, 2), p_signif)), hjust = 0.5, vjust = -0.8, size = 3, fontface = "bold", show.legend = F) +  # Add estimate & p-value stars
  facet_grid(category ~., scales = "free_y", space = "free_y") +  # Group by category
  geom_vline(xintercept = 0, lwd = 0.2, linetype = "dashed") +  # Vertical line at zero
  scale_shape_manual(values = c(16, 17)) +  # Different shapes for fixed and random effects
  scale_color_manual(values = c("gray60", "red3", "green4")) +  # Different colors for fixed and random
  labs(title = "",
       x = "Mixed Model Estimated Lodging (%)", y = "", caption = expression("GS - Growth Stage; ET - Early Tillering; SE - Stem Elongation; FLE - Flag Leaf Emergence; " * italic("p-value") < 0.05 ~ "*"),
       shape = "Effect Type", color = "P-Value") +
  #coord_cartesian(xlim = c(-20, 25))+
  theme_bw()+
  guides(color = "none")+
  theme(strip.text.y = element_text(angle = 0),
        plot.caption.position = "plot",  # ensures caption is treated as a plot component
    plot.caption = element_text(hjust = 0.5))
ggsave("figure/lodging/lodging_interac_mixed_modeling.png", width = 8, height = 5, dpi = 600)
```

      


```{r}
sjPlot::tab_model(reg_mod_int)
```

```{r}
#| eval: false
#| include: false
#library(ggplot2)
#library(lme4)
# Extract residuals
residuals <- resid(reg_mod_int)

# Histogram of residuals
ggplot(data.frame(residuals), aes(x = residuals)) +
  geom_histogram(bins = 100, fill = "blue", alpha = 0.5, color = "black") +
  theme_minimal() +
  labs(title = "Histogram of Residuals", x = "Residuals", y = "Frequency")

```

## Protein Mixed modeling
```{r}
# Set a random seed for reproducibility
set.seed(123)

# Fit the mixed model with year & location as random effects
reg_mod_int_yield_protein <- lmer(protein_percent_dm ~ cultivar * PGR_dose + PGR_growth_stage +
                (1 | year) + (1 | location), 
                data = data_int %>% mutate(pgr_trt_name = fct_relevel(pgr_trt_name, "No_PGR"),
                                       cultivar = fct_relevel(cultivar, "CDC_Austenson")))

# Extract fixed effects with p-values
fixed_effects <- broom.mixed::tidy(reg_mod_int_yield_protein, effects = "fixed") %>%
  filter(term != "(Intercept)")

# Extract confidence intervals for fixed effects
conf_int <- confint(reg_mod_int_yield_protein, method = "Wald") %>%  # Compute 95% CIs
  as.data.frame() %>%
  rownames_to_column("term") %>%
  filter(term %in% fixed_effects$term) %>%
  rename(ci_lower = `2.5 %`, ci_upper = `97.5 %`)

# Merge CIs with fixed effects
fixed_effects <- fixed_effects %>%
  left_join(conf_int, by = "term") %>%
  mutate(
    p_signif = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01  ~ "**",
      p.value < 0.05  ~ "*",
      TRUE ~ ""
    )
  )

# Extract random effects (variance components) - No p-values here
random_effects <- broom.mixed::tidy(reg_mod_int_yield_protein, effects = "ran_pars") %>%
  select(-term) %>% 
  rename(term = group) %>% 
  mutate(
    term = str_replace(term, "sd__", ""),  # Clean term names
    effect = "Random",
    p_signif = "",  # No p-values for random effects
    ci_lower = NA,  # No CIs for random effects
    ci_upper = NA
  )

# Combine fixed and random effects
model_results <- bind_rows(fixed_effects, random_effects)

# Assign grouping categories
model_results <- model_results %>%
  filter(term != "Residual") %>%
  mutate(category = case_when(
    grepl("location", term) ~ "Random Factors",
    grepl("year", term) ~ "Random Factors",
    term %in% c("cultivarAB_Hague", "cultivarEsma") ~ "Cultivar",
    term == "PGR_dose" ~ "PGR Dose",
    term %in% c("cultivarAB_Hague:PGR_dose", "cultivarEsma:PGR_dose", "cultivarCDC_Austenson:PGR_dose") ~ "Cultivar x PGR Dose",
    grepl("PGR_growth_stage", term) ~ "PGR Application Stage",
    TRUE ~ "Other"
  )) %>% 
  mutate(category = fct_relevel(category, "Random Factors"),  # Convert to factor for correct order
         significant_or_not = case_when(p.value < 0.05 ~ "Significant",
                                        p.value >= 0.05 ~ "Not Significant",
                                        .default = "other"
           
         )) %>% 
  mutate(term = case_when(
    term == "cultivarAB_Hague" ~ "AB Hague",
     term == "cultivarEsma" ~ "Esma",
    term == "PGR_dose" ~ "PGR Rate",
    term == "cultivarAB_Hague:PGR_dose" ~ "AB Hague x PGR Dose",
    term == "cultivarEsma:PGR_dose" ~ "Esma x PGR Dose",
    term == "cultivarCDC_Austenson:PGR_dose" ~ "CDC Austenson x PGR Dose",
    term == "PGR_growth_stageGS 21-24 (ET)" ~ "GS 21-24 (ET)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 37 (FLE)" ~ "GS 21-24 (ET) + GS 37 (FLE)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 30-32 (SE)" ~ "GS 21-24 (ET) + GS 30-32 (SE)",
    term == "PGR_growth_stageGS 37 (FLE)" ~ "GS 37 (FLE)",
    term == "PGR_growth_stageGS 30-32 (SE)" ~ "GS 30-32 (SE)",
    term == "PGR_growth_stageGS 30-32 (SE) + GS 37 (FLE)" ~ "GS 30-32 (SE) + GS 37 (FLE)",
    TRUE ~ term
  )) 


```

```{r}
# Apply manual order to the "term" column for PGR treatments only
#model_results <- model_results %>%
# Plot with significance stars and confidence intervals
# Define custom order for PGR treatments
custom_order_2 <- c("Random Factors", 
                  "Year", 
                  "Cultivar",
                  "PGR Dose",
                  "Cultivar x PGR Dose",
                  "PGR Application Stage")

custom_order_3 <- c("GS 30-32 (SE) + GS 37 (FLE)",
                    "GS 21-24 (ET) + GS 37 (FLE)",
                     "GS 21-24 (ET) + GS 30-32 (SE)",
                     "GS 37 (FLE)",
                     "GS 30-32 (SE)", 
                    "GS 21-24 (ET)"
                  )

model_results <- model_results %>% 
  
  mutate(effect = recode(effect,
                         "fixed" = "Fixed"), 
         term = recode(term,
                       "year" = "Year",
                       "location" = "Location"),
    category = fct_relevel(category, custom_order_2),
         term = fct_relevel(term, custom_order_3))
ggplot(model_results, aes(x = estimate, y = term, shape = effect, color = significant_or_not)) +
  geom_point(size = 2) +
  geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.2) +  # Confidence intervals
  geom_text(aes(label = paste(round(estimate, 2), p_signif)), hjust = 0.5, vjust = -0.8, size = 3, fontface = "bold", show.legend = F) +  # Add estimate & p-value stars
  facet_grid(category ~., scales = "free_y", space = "free_y") +  # Group by category
  geom_vline(xintercept = 0, lwd = 0.2, linetype = "dashed") +  # Vertical line at zero
  scale_shape_manual(values = c(16, 17)) +  # Different shapes for fixed and random effects
  scale_color_manual(values = c("gray60", "red3", "green4")) +  # Different colors for fixed and random
  labs(title = "",
       x = "Mixed Model Estimated Protein (%)", y = "", caption = expression("GS - Growth Stage; ET - Early Tillering; SE - Stem Elongation; FLE - Flag Leaf Emergence; " * italic("p-value") < 0.05 ~ "*"),
       shape = "Effect Type", color = "P-Value") +
  coord_cartesian(xlim = c(-0.5, 1.2))+
  theme_bw()+
  guides(color = "none")+
  theme(strip.text.y = element_text(angle = 0),
        plot.caption.position = "plot",  # ensures caption is treated as a plot component
    plot.caption = element_text(hjust = 0.5))
ggsave("figure/Protein/Protein_interac_mixed_modeling.png", width = 8, height = 5, dpi = 600)
```





```{r}
sjPlot::tab_model(reg_mod_int)
```

```{r}
#| eval: false
#| include: false
#library(ggplot2)
#library(lme4)
# Extract residuals
residuals <- resid(reg_mod_int)

# Histogram of residuals
ggplot(data.frame(residuals), aes(x = residuals)) +
  geom_histogram(bins = 100, fill = "blue", alpha = 0.5, color = "black") +
  theme_minimal() +
  labs(title = "Histogram of Residuals", x = "Residuals", y = "Frequency")
```


## NDF Mixed modeling

```{r}
# Set a random seed for reproducibility
set.seed(123)

# Fit the mixed model with year & location as random effects
reg_mod_int_yield_NDF <- lmer(ndf_percent_af ~ cultivar * PGR_dose + PGR_growth_stage +
                (1 | year) + (1 | location), 
                data = data_int %>% mutate(pgr_trt_name = fct_relevel(pgr_trt_name, "No_PGR"),
                                       cultivar = fct_relevel(cultivar, "CDC_Austenson")))

# Extract fixed effects with p-values
fixed_effects <- broom.mixed::tidy(reg_mod_int_yield_NDF, effects = "fixed") %>%
  filter(term != "(Intercept)")

# Extract confidence intervals for fixed effects
conf_int <- confint(reg_mod_int_yield_NDF, method = "Wald") %>%  # Compute 95% CIs
  as.data.frame() %>%
  rownames_to_column("term") %>%
  filter(term %in% fixed_effects$term) %>%
  rename(ci_lower = `2.5 %`, ci_upper = `97.5 %`)

# Merge CIs with fixed effects
fixed_effects <- fixed_effects %>%
  left_join(conf_int, by = "term") %>%
  mutate(
    p_signif = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01  ~ "**",
      p.value < 0.05  ~ "*",
      TRUE ~ ""
    )
  )

# Extract random effects (variance components) - No p-values here
random_effects <- broom.mixed::tidy(reg_mod_int_yield_NDF, effects = "ran_pars") %>%
  select(-term) %>% 
  rename(term = group) %>% 
  mutate(
    term = str_replace(term, "sd__", ""),  # Clean term names
    effect = "Random",
    p_signif = "",  # No p-values for random effects
    ci_lower = NA,  # No CIs for random effects
    ci_upper = NA
  )

# Combine fixed and random effects
model_results <- bind_rows(fixed_effects, random_effects)

# Assign grouping categories
model_results <- model_results %>%
  filter(term != "Residual") %>%
  mutate(category = case_when(
    grepl("location", term) ~ "Random Factors",
    grepl("year", term) ~ "Random Factors",
    term %in% c("cultivarAB_Hague", "cultivarEsma") ~ "Cultivar",
    term == "PGR_dose" ~ "PGR Dose",
    term %in% c("cultivarAB_Hague:PGR_dose", "cultivarEsma:PGR_dose", "cultivarCDC_Austenson:PGR_dose") ~ "Cultivar x PGR Dose",
    grepl("PGR_growth_stage", term) ~ "PGR Application Stage",
    TRUE ~ "Other"
  )) %>% 
  mutate(category = fct_relevel(category, "Random Factors"),  # Convert to factor for correct order
         significant_or_not = case_when(p.value < 0.05 ~ "Significant",
                                        p.value >= 0.05 ~ "Not Significant",
                                        .default = "other"
           
         )) %>% 
  mutate(term = case_when(
    term == "cultivarAB_Hague" ~ "AB Hague",
     term == "cultivarEsma" ~ "Esma",
    term == "PGR_dose" ~ "PGR Rate",
    term == "cultivarAB_Hague:PGR_dose" ~ "AB Hague x PGR Dose",
    term == "cultivarEsma:PGR_dose" ~ "Esma x PGR Dose",
    term == "cultivarCDC_Austenson:PGR_dose" ~ "CDC Austenson x PGR Dose",
    term == "PGR_growth_stageGS 21-24 (ET)" ~ "GS 21-24 (ET)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 37 (FLE)" ~ "GS 21-24 (ET) + GS 37 (FLE)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 30-32 (SE)" ~ "GS 21-24 (ET) + GS 30-32 (SE)",
    term == "PGR_growth_stageGS 37 (FLE)" ~ "GS 37 (FLE)",
    term == "PGR_growth_stageGS 30-32 (SE)" ~ "GS 30-32 (SE)",
    term == "PGR_growth_stageGS 30-32 (SE) + GS 37 (FLE)" ~ "GS 30-32 (SE) + GS 37 (FLE)",
    TRUE ~ term
  )) 


```

```{r}
# Apply manual order to the "term" column for PGR treatments only
#model_results <- model_results %>%
# Plot with significance stars and confidence intervals
# Define custom order for PGR treatments
custom_order_2 <- c("Random Factors", 
                  "Year", 
                  "Cultivar",
                  "PGR Dose",
                  "Cultivar x PGR Dose",
                  "PGR Application Stage")

custom_order_3 <- c("GS 30-32 (SE) + GS 37 (FLE)",
                    "GS 21-24 (ET) + GS 37 (FLE)",
                     "GS 21-24 (ET) + GS 30-32 (SE)",
                     "GS 37 (FLE)",
                     "GS 30-32 (SE)", 
                    "GS 21-24 (ET)"
                  )

model_results <- model_results %>% 
  
  mutate(effect = recode(effect,
                         "fixed" = "Fixed"), 
         term = recode(term,
                       "year" = "Year",
                       "location" = "Location"),
    category = fct_relevel(category, custom_order_2),
         term = fct_relevel(term, custom_order_3))
ggplot(model_results, aes(x = estimate, y = term, shape = effect, color = significant_or_not)) +
  geom_point(size = 2) +
  geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.2) +  # Confidence intervals
  geom_text(aes(label = paste(round(estimate, 4), p_signif)), hjust = 0.5, vjust = -0.8, size = 3, fontface = "bold", show.legend = F) +  # Add estimate & p-value stars
  facet_grid(category ~., scales = "free_y", space = "free_y") +  # Group by category
  geom_vline(xintercept = 0, lwd = 0.2, linetype = "dashed") +  # Vertical line at zero
  scale_shape_manual(values = c(16, 17)) +  # Different shapes for fixed and random effects
  scale_color_manual(values = c("gray60", "red3", "green4")) +  # Different colors for fixed and random
  labs(title = "",
       x = "Mixed Model Estimated Neutral Detergent Fiber (%)", y = "", caption = expression("GS - Growth Stage; ET - Early Tillering; SE - Stem Elongation; FLE - Flag Leaf Emergence; " * italic("p-value") < 0.05 ~ "*"),
       shape = "Effect Type", color = "P-Value") +
   coord_cartesian(xlim = c(-0.5, 1.5)) +
  theme_bw()+
  guides(color = "none")+
  theme(strip.text.y = element_text(angle = 0),
        plot.caption.position = "plot",  # ensures caption is treated as a plot component
    plot.caption = element_text(hjust = 0.5))
ggsave("figure/NDF/NDF_interac_mixed_modeling.png", width = 8, height = 5, dpi = 600)
```

 

```{r}
sjPlot::tab_model(reg_mod_int)
```

```{r}
#| eval: false
#| include: false
#library(ggplot2)
#library(lme4)
# Extract residuals
residuals <- resid(reg_mod_int)

# Histogram of residuals
ggplot(data.frame(residuals), aes(x = residuals)) +
  geom_histogram(bins = 100, fill = "blue", alpha = 0.5, color = "black") +
  theme_minimal() +
  labs(title = "Histogram of Residuals", x = "Residuals", y = "Frequency")

```

## TKW Mixed modeling

```{r}
# Set a random seed for reproducibility
set.seed(123)

# Fit the mixed model with year & location as random effects
reg_mod_int_yield_TKW <- lmer(tkw ~ cultivar * PGR_dose + PGR_growth_stage +
                (1 | year) + (1 | location), 
                data = data_int %>% mutate(pgr_trt_name = fct_relevel(pgr_trt_name, "No_PGR"),
                                       cultivar = fct_relevel(cultivar, "CDC_Austenson")))

# Extract fixed effects with p-values
fixed_effects <- broom.mixed::tidy(reg_mod_int_yield_TKW, effects = "fixed") %>%
  filter(term != "(Intercept)")

# Extract confidence intervals for fixed effects
conf_int <- confint(reg_mod_int_yield_TKW, method = "Wald") %>%  # Compute 95% CIs
  as.data.frame() %>%
  rownames_to_column("term") %>%
  filter(term %in% fixed_effects$term) %>%
  rename(ci_lower = `2.5 %`, ci_upper = `97.5 %`)

# Merge CIs with fixed effects
fixed_effects <- fixed_effects %>%
  left_join(conf_int, by = "term") %>%
  mutate(
    p_signif = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01  ~ "**",
      p.value < 0.05  ~ "*",
      TRUE ~ ""
    )
  )

# Extract random effects (variance components) - No p-values here
random_effects <- broom.mixed::tidy(reg_mod_int_yield_TKW, effects = "ran_pars") %>%
  select(-term) %>% 
  rename(term = group) %>% 
  mutate(
    term = str_replace(term, "sd__", ""),  # Clean term names
    effect = "Random",
    p_signif = "",  # No p-values for random effects
    ci_lower = NA,  # No CIs for random effects
    ci_upper = NA
  )

# Combine fixed and random effects
model_results <- bind_rows(fixed_effects, random_effects)

# Assign grouping categories
model_results <- model_results %>%
  filter(term != "Residual") %>%
  mutate(category = case_when(
    grepl("location", term) ~ "Random Factors",
    grepl("year", term) ~ "Random Factors",
    term %in% c("cultivarAB_Hague", "cultivarEsma") ~ "Cultivar",
    term == "PGR_dose" ~ "PGR Dose",
    term %in% c("cultivarAB_Hague:PGR_dose", "cultivarEsma:PGR_dose", "cultivarCDC_Austenson:PGR_dose") ~ "Cultivar x PGR Dose",
    grepl("PGR_growth_stage", term) ~ "PGR Application Stage",
    TRUE ~ "Other"
  )) %>% 
  mutate(category = fct_relevel(category, "Random Factors"),  # Convert to factor for correct order
         significant_or_not = case_when(p.value < 0.05 ~ "Significant",
                                        p.value >= 0.05 ~ "Not Significant",
                                        .default = "other"
           
         )) %>% 
  mutate(term = case_when(
    term == "cultivarAB_Hague" ~ "AB Hague",
     term == "cultivarEsma" ~ "Esma",
    term == "PGR_dose" ~ "PGR Rate",
    term == "cultivarAB_Hague:PGR_dose" ~ "AB Hague x PGR Dose",
    term == "cultivarEsma:PGR_dose" ~ "Esma x PGR Dose",
    term == "cultivarCDC_Austenson:PGR_dose" ~ "CDC Austenson x PGR Dose",
    term == "PGR_growth_stageGS 21-24 (ET)" ~ "GS 21-24 (ET)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 37 (FLE)" ~ "GS 21-24 (ET) + GS 37 (FLE)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 30-32 (SE)" ~ "GS 21-24 (ET) + GS 30-32 (SE)",
    term == "PGR_growth_stageGS 37 (FLE)" ~ "GS 37 (FLE)",
    term == "PGR_growth_stageGS 30-32 (SE)" ~ "GS 30-32 (SE)",
    term == "PGR_growth_stageGS 30-32 (SE) + GS 37 (FLE)" ~ "GS 30-32 (SE) + GS 37 (FLE)",
    TRUE ~ term
  )) 


```

```{r}
# Apply manual order to the "term" column for PGR treatments only
#model_results <- model_results %>%
# Plot with significance stars and confidence intervals
# Define custom order for PGR treatments
custom_order_2 <- c("Random Factors", 
                  "Year", 
                  "Cultivar",
                  "PGR Dose",
                  "Cultivar x PGR Dose",
                  "PGR Application Stage")

custom_order_3 <- c("GS 30-32 (SE) + GS 37 (FLE)",
                    "GS 21-24 (ET) + GS 37 (FLE)",
                     "GS 21-24 (ET) + GS 30-32 (SE)",
                     "GS 37 (FLE)",
                     "GS 30-32 (SE)", 
                    "GS 21-24 (ET)"
                  )

model_results <- model_results %>% 
  
  mutate(effect = recode(effect,
                         "fixed" = "Fixed"), 
         term = recode(term,
                       "year" = "Year",
                       "location" = "Location"),
    category = fct_relevel(category, custom_order_2),
         term = fct_relevel(term, custom_order_3))
ggplot(model_results, aes(x = estimate, y = term, shape = effect, color = significant_or_not)) +
  geom_point(size = 2) +
  geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.2) +  # Confidence intervals
  geom_text(aes(label = paste(round(estimate, 4), p_signif)), hjust = 0.5, vjust = -0.8, size = 3, fontface = "bold", show.legend = F) +  # Add estimate & p-value stars
  facet_grid(category ~., scales = "free_y", space = "free_y") +  # Group by category
  geom_vline(xintercept = 0, lwd = 0.2, linetype = "dashed") +  # Vertical line at zero
  scale_shape_manual(values = c(16, 17)) +  # Different shapes for fixed and random effects
  scale_color_manual(values = c("gray60", "red3", "green4")) +  # Different colors for fixed and random
  labs(title = "",
       x = "Mixed Model Estimated Thousand Kernel Weight (g)", y = "", caption = expression("GS - Growth Stage; ET - Early Tillering; SE - Stem Elongation; FLE - Flag Leaf Emergence; " * italic("p-value") < 0.01 ~ "**"),
       shape = "Effect Type", color = "P-Value") +
  # coord_cartesian(xlim = c(-0.5, 1.5)) +
  theme_bw()+
  guides(color = "none")+
  theme(strip.text.y = element_text(angle = 0),
        plot.caption.position = "plot",  # ensures caption is treated as a plot component
    plot.caption = element_text(hjust = 0.5))
ggsave("figure/TKW/TKW_interac_mixed_modeling.png", width = 8, height = 5, dpi = 600)
```



```{r}
sjPlot::tab_model(reg_mod_int)
```

```{r}
#| eval: false
#| include: false
#library(ggplot2)
#library(lme4)
# Extract residuals
residuals <- resid(reg_mod_int)

# Histogram of residuals
ggplot(data.frame(residuals), aes(x = residuals)) +
  geom_histogram(bins = 100, fill = "blue", alpha = 0.5, color = "black") +
  theme_minimal() +
  labs(title = "Histogram of Residuals", x = "Residuals", y = "Frequency")

```

## IV_D_EC Mixed modeling

```{r}
# Set a random seed for reproducibility
set.seed(123)

# Fit the mixed model with year & location as random effects
reg_mod_int_yield_IVDEC <- lmer(iv_d_ec_percent_dm ~ cultivar * PGR_dose + PGR_growth_stage +
                (1 | year) + (1 | location), 
                data = data_int %>% mutate(pgr_trt_name = fct_relevel(pgr_trt_name, "No_PGR"),
                                       cultivar = fct_relevel(cultivar, "CDC_Austenson")))

# Extract fixed effects with p-values
fixed_effects <- broom.mixed::tidy(reg_mod_int_yield_IVDEC, effects = "fixed") %>%
  filter(term != "(Intercept)")

# Extract confidence intervals for fixed effects
conf_int <- confint(reg_mod_int_yield_IVDEC, method = "Wald") %>%  # Compute 95% CIs
  as.data.frame() %>%
  rownames_to_column("term") %>%
  filter(term %in% fixed_effects$term) %>%
  rename(ci_lower = `2.5 %`, ci_upper = `97.5 %`)

# Merge CIs with fixed effects
fixed_effects <- fixed_effects %>%
  left_join(conf_int, by = "term") %>%
  mutate(
    p_signif = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01  ~ "**",
      p.value < 0.05  ~ "*",
      TRUE ~ ""
    )
  )

# Extract random effects (variance components) - No p-values here
random_effects <- broom.mixed::tidy(reg_mod_int_yield_IVDEC, effects = "ran_pars") %>%
  select(-term) %>% 
  rename(term = group) %>% 
  mutate(
    term = str_replace(term, "sd__", ""),  # Clean term names
    effect = "Random",
    p_signif = "",  # No p-values for random effects
    ci_lower = NA,  # No CIs for random effects
    ci_upper = NA
  )

# Combine fixed and random effects
model_results <- bind_rows(fixed_effects, random_effects)

# Assign grouping categories
model_results <- model_results %>%
  filter(term != "Residual") %>%
  mutate(category = case_when(
    grepl("location", term) ~ "Random Factors",
    grepl("year", term) ~ "Random Factors",
    term %in% c("cultivarAB_Hague", "cultivarEsma") ~ "Cultivar",
    term == "PGR_dose" ~ "PGR Dose",
    term %in% c("cultivarAB_Hague:PGR_dose", "cultivarEsma:PGR_dose", "cultivarCDC_Austenson:PGR_dose") ~ "Cultivar x PGR Dose",
    grepl("PGR_growth_stage", term) ~ "PGR Application Stage",
    TRUE ~ "Other"
  )) %>% 
  mutate(category = fct_relevel(category, "Random Factors"),  # Convert to factor for correct order
         significant_or_not = case_when(p.value < 0.05 ~ "Significant",
                                        p.value >= 0.05 ~ "Not Significant",
                                        .default = "other"
           
         )) %>% 
  mutate(term = case_when(
    term == "cultivarAB_Hague" ~ "AB Hague",
     term == "cultivarEsma" ~ "Esma",
    term == "PGR_dose" ~ "PGR Rate",
    term == "cultivarAB_Hague:PGR_dose" ~ "AB Hague x PGR Dose",
    term == "cultivarEsma:PGR_dose" ~ "Esma x PGR Dose",
    term == "cultivarCDC_Austenson:PGR_dose" ~ "CDC Austenson x PGR Dose",
    term == "PGR_growth_stageGS 21-24 (ET)" ~ "GS 21-24 (ET)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 37 (FLE)" ~ "GS 21-24 (ET) + GS 37 (FLE)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 30-32 (SE)" ~ "GS 21-24 (ET) + GS 30-32 (SE)",
    term == "PGR_growth_stageGS 37 (FLE)" ~ "GS 37 (FLE)",
    term == "PGR_growth_stageGS 30-32 (SE)" ~ "GS 30-32 (SE)",
    term == "PGR_growth_stageGS 30-32 (SE) + GS 37 (FLE)" ~ "GS 30-32 (SE) + GS 37 (FLE)",
    TRUE ~ term
  )) 
```

```{r}
# Apply manual order to the "term" column for PGR treatments only
#model_results <- model_results %>%
# Plot with significance stars and confidence intervals
# Define custom order for PGR treatments
custom_order_2 <- c("Random Factors", 
                  "Year", 
                  "Cultivar",
                  "PGR Dose",
                  "Cultivar x PGR Dose",
                  "PGR Application Stage")

custom_order_3 <- c("GS 30-32 (SE) + GS 37 (FLE)",
                    "GS 21-24 (ET) + GS 37 (FLE)",
                     "GS 21-24 (ET) + GS 30-32 (SE)",
                     "GS 37 (FLE)",
                     "GS 30-32 (SE)", 
                    "GS 21-24 (ET)"
                  )

model_results <- model_results %>% 
  
  mutate(effect = recode(effect,
                         "fixed" = "Fixed"), 
         term = recode(term,
                       "year" = "Year",
                       "location" = "Location"),
    category = fct_relevel(category, custom_order_2),
         term = fct_relevel(term, custom_order_3))
ggplot(model_results, aes(x = estimate, y = term, shape = effect, color = significant_or_not)) +
  geom_point(size = 2) +
  geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.2) +  # Confidence intervals
  geom_text(aes(label = paste(round(estimate, 2), p_signif)), hjust = 0.5, vjust = -0.8, size = 3, fontface = "bold", show.legend = F) +  # Add estimate & p-value stars
  facet_grid(category ~., scales = "free_y", space = "free_y") +  # Group by category
  geom_vline(xintercept = 0, lwd = 0.2, linetype = "dashed") +  # Vertical line at zero
  scale_shape_manual(values = c(16, 17)) +  # Different shapes for fixed and random effects
  scale_color_manual(values = c("gray60", "red3", "green4")) +  # Different colors for fixed and random
  labs(title = "",
       x = "Mixed Model Estimated In Vitro Digestible Energy content (kcal/kg)", y = "", caption = expression("GS - Growth Stage; ET - Early Tillering; SE - Stem Elongation; FLE - Flag Leaf Emergence; " * italic("p-value") < 0.001 ~ "***"),
       shape = "Effect Type", color = "P-Value") +
  coord_cartesian(xlim = c(-65, 220))+
  theme_bw()+
  guides(color = "none")+
  theme(strip.text.y = element_text(angle = 0),
        plot.caption.position = "plot",  # ensures caption is treated as a plot component
    plot.caption = element_text(hjust = 0.5))
ggsave("figure/iv_d_ec/iv_d_ec_interac_mixed_modeling.png", width = 8, height = 5, dpi = 600)
```




```{r}
sjPlot::tab_model(reg_mod_int)
```

```{r}
#| eval: false
#| include: false
#library(ggplot2)
#library(lme4)
# Extract residuals
residuals <- resid(reg_mod_int)

# Histogram of residuals
ggplot(data.frame(residuals), aes(x = residuals)) +
  geom_histogram(bins = 100, fill = "blue", alpha = 0.5, color = "black") +
  theme_minimal() +
  labs(title = "Histogram of Residuals", x = "Residuals", y = "Frequency")

```

## starch Mixed modeling

```{r}
# Set a random seed for reproducibility
set.seed(123)

# Fit the mixed model with year & location as random effects
reg_mod_int_yield_starch <- lmer(starch_percent_dm ~ cultivar * PGR_dose + PGR_growth_stage +
                (1 | year) + (1 | location), 
                data = data_int %>% mutate(pgr_trt_name = fct_relevel(pgr_trt_name, "No_PGR"),
                                       cultivar = fct_relevel(cultivar, "CDC_Austenson")))

# Extract fixed effects with p-values
fixed_effects <- broom.mixed::tidy(reg_mod_int_yield_starch, effects = "fixed") %>%
  filter(term != "(Intercept)")

# Extract confidence intervals for fixed effects
conf_int <- confint(reg_mod_int_yield_starch, method = "Wald") %>%  # Compute 95% CIs
  as.data.frame() %>%
  rownames_to_column("term") %>%
  filter(term %in% fixed_effects$term) %>%
  rename(ci_lower = `2.5 %`, ci_upper = `97.5 %`)

# Merge CIs with fixed effects
fixed_effects <- fixed_effects %>%
  left_join(conf_int, by = "term") %>%
  mutate(
    p_signif = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01  ~ "**",
      p.value < 0.05  ~ "*",
      TRUE ~ ""
    )
  )

# Extract random effects (variance components) - No p-values here
random_effects <- broom.mixed::tidy(reg_mod_int_yield_starch, effects = "ran_pars") %>%
  select(-term) %>% 
  rename(term = group) %>% 
  mutate(
    term = str_replace(term, "sd__", ""),  # Clean term names
    effect = "Random",
    p_signif = "",  # No p-values for random effects
    ci_lower = NA,  # No CIs for random effects
    ci_upper = NA
  )

# Combine fixed and random effects
model_results <- bind_rows(fixed_effects, random_effects)

# Assign grouping categories
model_results <- model_results %>%
  filter(term != "Residual") %>%
  mutate(category = case_when(
    grepl("location", term) ~ "Random Factors",
    grepl("year", term) ~ "Random Factors",
    term %in% c("cultivarAB_Hague", "cultivarEsma") ~ "Cultivar",
    term == "PGR_dose" ~ "PGR Dose",
    term %in% c("cultivarAB_Hague:PGR_dose", "cultivarEsma:PGR_dose", "cultivarCDC_Austenson:PGR_dose") ~ "Cultivar x PGR Dose",
    grepl("PGR_growth_stage", term) ~ "PGR Application Stage",
    TRUE ~ "Other"
  )) %>% 
  mutate(category = fct_relevel(category, "Random Factors"),  # Convert to factor for correct order
         significant_or_not = case_when(p.value < 0.05 ~ "Significant",
                                        p.value >= 0.05 ~ "Not Significant",
                                        .default = "other"
           
         )) %>% 
  mutate(term = case_when(
    term == "cultivarAB_Hague" ~ "AB Hague",
     term == "cultivarEsma" ~ "Esma",
    term == "PGR_dose" ~ "PGR Rate",
    term == "cultivarAB_Hague:PGR_dose" ~ "AB Hague x PGR Dose",
    term == "cultivarEsma:PGR_dose" ~ "Esma x PGR Dose",
    term == "cultivarCDC_Austenson:PGR_dose" ~ "CDC Austenson x PGR Dose",
    term == "PGR_growth_stageGS 21-24 (ET)" ~ "GS 21-24 (ET)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 37 (FLE)" ~ "GS 21-24 (ET) + GS 37 (FLE)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 30-32 (SE)" ~ "GS 21-24 (ET) + GS 30-32 (SE)",
    term == "PGR_growth_stageGS 37 (FLE)" ~ "GS 37 (FLE)",
    term == "PGR_growth_stageGS 30-32 (SE)" ~ "GS 30-32 (SE)",
    term == "PGR_growth_stageGS 30-32 (SE) + GS 37 (FLE)" ~ "GS 30-32 (SE) + GS 37 (FLE)",
    TRUE ~ term
  )) 


```

```{r}
# Apply manual order to the "term" column for PGR treatments only
#model_results <- model_results %>%
# Plot with significance stars and confidence intervals
# Define custom order for PGR treatments
custom_order_2 <- c("Random Factors", 
                  "Year", 
                  "Cultivar",
                  "PGR Dose",
                  "Cultivar x PGR Dose",
                  "PGR Application Stage")

custom_order_3 <- c("GS 30-32 (SE) + GS 37 (FLE)",
                    "GS 21-24 (ET) + GS 37 (FLE)",
                     "GS 21-24 (ET) + GS 30-32 (SE)",
                     "GS 37 (FLE)",
                     "GS 30-32 (SE)", 
                    "GS 21-24 (ET)"
                  )

model_results <- model_results %>% 
  
  mutate(effect = recode(effect,
                         "fixed" = "Fixed"), 
         term = recode(term,
                       "year" = "Year",
                       "location" = "Location"),
    category = fct_relevel(category, custom_order_2),
         term = fct_relevel(term, custom_order_3))
ggplot(model_results, aes(x = estimate, y = term, shape = effect, color = significant_or_not)) +
  geom_point(size = 2) +
  geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.2) +  # Confidence intervals
  geom_text(aes(label = paste(round(estimate, 4), p_signif)), hjust = 0.5, vjust = -0.8, size = 3, fontface = "bold", show.legend = F) +  # Add estimate & p-value stars
  facet_grid(category ~., scales = "free_y", space = "free_y") +  # Group by category
  geom_vline(xintercept = 0, lwd = 0.2, linetype = "dashed") +  # Vertical line at zero
  scale_shape_manual(values = c(16, 17)) +  # Different shapes for fixed and random effects
  scale_color_manual(values = c("gray60", "red3", "green4")) +  # Different colors for fixed and random
  labs(title = "",
       x = "Mixed Model Estimated Starch (%)", y = "", caption = expression("GS - Growth Stage; ET - Early Tillering; SE - Stem Elongation; FLE - Flag Leaf Emergence; " * italic("p-value") < 0.001 ~ "***"),
       shape = "Effect Type", color = "P-Value") +
  coord_cartesian(xlim = c(-1, 3)) +
  theme_bw()+
  guides(color = "none")+
  theme(strip.text.y = element_text(angle = 0),
        plot.caption.position = "plot",  # ensures caption is treated as a plot component
    plot.caption = element_text(hjust = 0.5))
ggsave("figure/starch/starch_interac_mixed_modeling.png", width = 8, height = 5, dpi = 600)
```



```{r}
sjPlot::tab_model(reg_mod_int)
```

```{r}
#| eval: false
#| include: false
#library(ggplot2)
#library(lme4)
# Extract residuals
residuals <- resid(reg_mod_int)

# Histogram of residuals
ggplot(data.frame(residuals), aes(x = residuals)) +
  geom_histogram(bins = 100, fill = "blue", alpha = 0.5, color = "black") +
  theme_minimal() +
  labs(title = "Histogram of Residuals", x = "Residuals", y = "Frequency")

```

## Test weight Mixed modeling

```{r}
# Set a random seed for reproducibility
set.seed(123)

# Fit the mixed model with year & location as random effects
reg_mod_int_yield_TestWeight <- lmer(test_weight_kg_h_l ~ cultivar * PGR_dose + PGR_growth_stage +
                (1 | year) + (1 | location), 
                data = data_int %>% mutate(pgr_trt_name = fct_relevel(pgr_trt_name, "No_PGR"),
                                       cultivar = fct_relevel(cultivar, "CDC_Austenson")))

# Extract fixed effects with p-values
fixed_effects <- broom.mixed::tidy(reg_mod_int_yield_TestWeight, effects = "fixed") %>%
  filter(term != "(Intercept)")

# Extract confidence intervals for fixed effects
conf_int <- confint(reg_mod_int_yield_TestWeight, method = "Wald") %>%  # Compute 95% CIs
  as.data.frame() %>%
  rownames_to_column("term") %>%
  filter(term %in% fixed_effects$term) %>%
  rename(ci_lower = `2.5 %`, ci_upper = `97.5 %`)

# Merge CIs with fixed effects
fixed_effects <- fixed_effects %>%
  left_join(conf_int, by = "term") %>%
  mutate(
    p_signif = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01  ~ "**",
      p.value < 0.05  ~ "*",
      TRUE ~ ""
    )
  )

# Extract random effects (variance components) - No p-values here
random_effects <- broom.mixed::tidy(reg_mod_int_yield_TestWeight, effects = "ran_pars") %>%
  select(-term) %>% 
  rename(term = group) %>% 
  mutate(
    term = str_replace(term, "sd__", ""),  # Clean term names
    effect = "Random",
    p_signif = "",  # No p-values for random effects
    ci_lower = NA,  # No CIs for random effects
    ci_upper = NA
  )

# Combine fixed and random effects
model_results <- bind_rows(fixed_effects, random_effects)

# Assign grouping categories
model_results <- model_results %>%
  filter(term != "Residual") %>%
  mutate(category = case_when(
    grepl("location", term) ~ "Random Factors",
    grepl("year", term) ~ "Random Factors",
    term %in% c("cultivarAB_Hague", "cultivarEsma") ~ "Cultivar",
    term == "PGR_dose" ~ "PGR Dose",
    term %in% c("cultivarAB_Hague:PGR_dose", "cultivarEsma:PGR_dose", "cultivarCDC_Austenson:PGR_dose") ~ "Cultivar x PGR Dose",
    grepl("PGR_growth_stage", term) ~ "PGR Application Stage",
    TRUE ~ "Other"
  )) %>% 
  mutate(category = fct_relevel(category, "Random Factors"),  # Convert to factor for correct order
         significant_or_not = case_when(p.value < 0.05 ~ "Significant",
                                        p.value >= 0.05 ~ "Not Significant",
                                        .default = "other"
           
         )) %>% 
  mutate(term = case_when(
    term == "cultivarAB_Hague" ~ "AB Hague",
     term == "cultivarEsma" ~ "Esma",
    term == "PGR_dose" ~ "PGR Rate",
    term == "cultivarAB_Hague:PGR_dose" ~ "AB Hague x PGR Dose",
    term == "cultivarEsma:PGR_dose" ~ "Esma x PGR Dose",
    term == "cultivarCDC_Austenson:PGR_dose" ~ "CDC Austenson x PGR Dose",
    term == "PGR_growth_stageGS 21-24 (ET)" ~ "GS 21-24 (ET)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 37 (FLE)" ~ "GS 21-24 (ET) + GS 37 (FLE)",
    term == "PGR_growth_stageGS 21-24 (ET) + GS 30-32 (SE)" ~ "GS 21-24 (ET) + GS 30-32 (SE)",
    term == "PGR_growth_stageGS 37 (FLE)" ~ "GS 37 (FLE)",
    term == "PGR_growth_stageGS 30-32 (SE)" ~ "GS 30-32 (SE)",
    term == "PGR_growth_stageGS 30-32 (SE) + GS 37 (FLE)" ~ "GS 30-32 (SE) + GS 37 (FLE)",
    TRUE ~ term
  )) 


```

```{r}
# Apply manual order to the "term" column for PGR treatments only
#model_results <- model_results %>%
# Plot with significance stars and confidence intervals
# Define custom order for PGR treatments
custom_order_2 <- c("Random Factors", 
                  "Year", 
                  "Cultivar",
                  "PGR Dose",
                  "Cultivar x PGR Dose",
                  "PGR Application Stage")

custom_order_3 <- c("GS 30-32 (SE) + GS 37 (FLE)",
                    "GS 21-24 (ET) + GS 37 (FLE)",
                     "GS 21-24 (ET) + GS 30-32 (SE)",
                     "GS 37 (FLE)",
                     "GS 30-32 (SE)", 
                    "GS 21-24 (ET)"
                  )

model_results <- model_results %>% 
  
  mutate(effect = recode(effect,
                         "fixed" = "Fixed"), 
         term = recode(term,
                       "year" = "Year",
                       "location" = "Location"),
    category = fct_relevel(category, custom_order_2),
         term = fct_relevel(term, custom_order_3))
ggplot(model_results, aes(x = estimate, y = term, shape = effect, color = significant_or_not)) +
  geom_point(size = 2) +
  geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.2) +  # Confidence intervals
  geom_text(aes(label = paste(round(estimate, 4), p_signif)), hjust = 0.5, vjust = -0.8, size = 3, fontface = "bold", show.legend = F) +  # Add estimate & p-value stars
  facet_grid(category ~., scales = "free_y", space = "free_y") +  # Group by category
  geom_vline(xintercept = 0, lwd = 0.2, linetype = "dashed") +  # Vertical line at zero
  scale_shape_manual(values = c(16, 17)) +  # Different shapes for fixed and random effects
  scale_color_manual(values = c("gray60", "red3", "green4")) +  # Different colors for fixed and random
  labs(title = "",
       x = "Mixed Model Estimated Test Weight (kg/hL)", y = "", caption = expression("GS - Growth Stage; ET - Early Tillering; SE - Stem Elongation; FLE - Flag Leaf Emergence; " * italic("p-value") < 0.05 ~ "*"),
       shape = "Effect Type", color = "P-Value") +
  # coord_cartesian(xlim = c(-0.5, 1.5)) +
  theme_bw()+
  guides(color = "none")+
  theme(strip.text.y = element_text(angle = 0),
        plot.caption.position = "plot",  # ensures caption is treated as a plot component
    plot.caption = element_text(hjust = 0.5))
ggsave("figure/test_weight/test_weight_interac_mixed_modeling.png", width = 8, height = 5, dpi = 600)
```



```{r}
sjPlot::tab_model(reg_mod_int)
```

```{r}
#| eval: false
#| include: false
#library(ggplot2)
#library(lme4)
# Extract residuals
residuals <- resid(reg_mod_int)

# Histogram of residuals
ggplot(data.frame(residuals), aes(x = residuals)) +
  geom_histogram(bins = 100, fill = "blue", alpha = 0.5, color = "black") +
  theme_minimal() +
  labs(title = "Histogram of Residuals", x = "Residuals", y = "Frequency")

```

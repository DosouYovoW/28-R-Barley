---
title: "Impact of Plant Growth Regulator (PGR) on barley varieties"
format: html
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Notes

Testing the effect of Plant Growth Regulator (PGR) on 3 varieties of Barley with 4 replicates using the split plot design. 9 trt x 3 variety x 4 rep

# Load libraries

```{r}
#| message: false
#| warning: false
library(tidyverse)
library(tidymodels)
library(readxl)
library(janitor)
library(plotly)
library(corrr)
library(sjPlot)
library(GGally)
library(ggpubr)
library(patchwork)
library(agricolae)
library(lmerTest)
```

# Load Custom functions

```{r}
#| message: false
#| warning: false
source("myFunctions2.R") 
```

# Load data

```{r}
#| message: false
#| warning: false
data <- readxl::read_excel("data/All Year 28 R Barley trial data.xlsx", sheet = "Overall_2") %>% 
  clean_names() %>% 
  filter(!(location == "Falher" & year == 2024)) %>% 
  mutate(yield_adj_to_13_5_percent = as.numeric(yield_adj_to_13_5_percent),
         yield_adj_to_13_5_percent_bu = as.numeric(yield_adj_to_13_5_percent_bu),
         avg_height_at_phys_maturity = as.numeric(avg_height_at_phys_maturity),
         lodging_index_1 = as.numeric(lodging_index_1),
         lodging_index_2 = as.numeric(lodging_index_2),
         lodging_index_3 = as.numeric(lodging_index_3),
         tkw_avg_adjusted_to_13_5_percent_moisture = as.numeric(tkw_avg),
         ndf_percent_dm = as.numeric(ndf_percent_dm),
         iv_d_ec_percent_dm = as.numeric(iv_d_ec_percent_dm),
         starch_percent_dm = as.numeric(starch_percent_dm),
         test_weight_kg_h_l = as.numeric(test_weight_kg_h_l),
         protein_percent_dm = as.numeric(protein_percent_dm),
         dtm = as.numeric(dtm),
         grain_moisture_percent = as.numeric(grain_moisture_percent)) %>% 
  mutate(cultivar = case_when(cultivar == "TR18647"~ "AB_Hague",
                              .default = cultivar))
head(data) 
```

# Statistics

## Data cleaning

```{r}
#| message: false
#| warning: false
cleaned_data_temp <-
  data %>% 
  mutate(lodging_avg = (lodging_index_1 + lodging_index_2 + lodging_index_3) /3) %>% 
  rename(tkw = tkw_avg_adjusted_to_13_5_percent_moisture,
         ndf_percent_af = ndf_percent_dm,
         plant_height_maturity_cm = emerge_avg_plants_m2,
         yield_bu_acre = yield_adj_to_13_5_percent_bu
         ) %>% 
  select("year", "location", "cultivar", "pgr_trt_name",  "yield_bu_acre",
  "lodging_index_3",
  "protein_percent_dm",
  "avg_height_at_phys_maturity",
  "tkw",
  "test_weight_kg_h_l",
  "dtm",
  "ndf_percent_af",
  "iv_d_ec_percent_dm",
  "grain_moisture_percent",
   "starch_percent_dm",
  "yield_adj_to_13_5_percent",
  "lodging_avg")
```

## Feature engineering

```{r}
#| message: false
#| warning: false
# Create a recipe
rec_1 <- recipe(yield_adj_to_13_5_percent ~ ., data = cleaned_data_temp) %>%
  step_impute_knn(all_predictors(), neighbors = 5)  # use k = 5

# Prep the recipe
rec_prepped_1 <- prep(rec_1)

# Apply the imputation to the full dataset
cleaned_data_imputed_1 <- bake(rec_prepped_1, new_data = NULL) %>% 
  select(-yield_adj_to_13_5_percent)
```

```{r}
#| message: false
#| warning: false
# Create a recipe
rec_2 <- recipe(yield_bu_acre ~ ., data = cleaned_data_temp) %>%
  step_impute_knn(all_predictors(), neighbors = 5)  # use k = 5

# Prep the recipe
rec_prepped_2 <- prep(rec_2)

# Apply the imputation to the full dataset
cleaned_data_imputed_2 <- bake(rec_prepped_2, new_data = NULL) %>% 
  select(-yield_bu_acre)
```

```{r}
cleaned_data_imputed <- cleaned_data_imputed_1 %>% 
  left_join(cleaned_data_imputed_2) %>% 
  select(- lodging_index_3) %>% 
  rename(lodging_index_3 = lodging_avg) %>% 
  filter(!(year == 2022 & location == "Vermilion"& yield_adj_to_13_5_percent > 11000))  
cleaned_data_imputed %>% view()
```

# Lodging index exploration

```{r}
cleaned_data_imputed %>% 
  ggplot(aes(lodging_index_3, fill = pgr_trt_name))+
  geom_histogram(position = position_dodge())+
  facet_grid(location ~ cultivar)
```

## CV calculation

```{r}
 
  cv_sd = sd(cleaned_data_imputed$avg_height_at_phys_maturity)
  cv_mean = mean(cleaned_data_imputed$avg_height_at_phys_maturity)
  cv_sd/cv_mean
  cleaned_data_imputed %>% 
    group_by(location) %>% 
    summarise(cv_sd = sd(avg_height_at_phys_maturity),
              cv_mean = mean(avg_height_at_phys_maturity),
              cv_final = cv_sd/cv_mean)
```

```{r}
cleaned_data_imputed %>% 
    group_by(location, year, cultivar) %>% 
    summarise(cv_sd = sd(avg_height_at_phys_maturity),
              cv_mean = mean(avg_height_at_phys_maturity),
              cv_final = cv_sd/cv_mean)
```

```{r}
cleaned_data_imputed %>% 
    group_by(location, year, cultivar) %>% 
    summarise(cv_sd = sd(yield_adj_to_13_5_percent),
              cv_mean = mean(yield_adj_to_13_5_percent),
              cv_final = cv_sd/cv_mean)
```

```{r}
cleaned_data_imputed %>%
  ggplot(aes(yield_adj_to_13_5_percent, fill = cultivar))+
  geom_histogram(bins = 80)+
  facet_grid(location ~ year)
```

## Statistics of Variety response by Location

```{r}
#| message: false
#| warning: false
# Define treatments and outcomes
# Vector of outcome variables
treatments <- c(
  "yield_bu_acre",
  "lodging_index_3",
  "protein_percent_dm",
  "avg_height_at_phys_maturity",
  "tkw",
  "test_weight_kg_h_l",
  "dtm",
  "ndf_percent_af",
  "iv_d_ec_percent_dm",
  "grain_moisture_percent",
   "starch_percent_dm",
  "yield_adj_to_13_5_percent"
)

# Vector of locations
locations <- c("Vermilion", "Falher", "Lethbridge")  

# Wrapper function for one location and one treatment
run_lsd_test <- function(data, location_name, outcome_name) {
  data_filtered <- data %>% 
    filter(location == location_name) %>%
    mutate(treatment = cultivar, outcome = .data[[outcome_name]])

  lsd_test_f2_05(data_filtered) %>%
    mutate(
      trt = outcome_name,
      location = location_name,
      result = case_when(
        is.na(gr) ~ "",
        TRUE ~ paste0(round(mean_r, 3), "Â±", round(SE_r, 3),  gr)
      ), .after = 2
    ) %>%
    select(-number)
}

# Loop over all combinations of locations and treatments
all_results_01 <- crossing(loc = locations, trt = treatments) %>%
  pmap_dfr(~run_lsd_test(cleaned_data_imputed, ..1, ..2)) %>% 
  rename(variety = treatment)

# View results
head(all_results_01)
writexl::write_xlsx(all_results_01, "Final_Report/Data/all_results_location_variety.xlsx")
```

### Graphs

```{r}
data_graph_01 <- all_results_01 %>% 
  select(-c(mean_se, result)) %>% 
  filter(!(variety %in% c("lsd_value", "p_value")))

data_graph_lsd_pvalue <- all_results_01 %>% 
  select(-c(mean_se, result, SE_r, gr)) %>% 
  filter(variety %in% c("lsd_value", "p_value")) %>% 
  rename(test = variety,
         test_value = mean_r) %>% 
  pivot_wider(names_from = test, values_from = test_value)

data_graph <- data_graph_01 %>% 
  left_join(data_graph_lsd_pvalue)
```

```{r}
p1 <- data_graph %>%
  filter(trt %in% c("avg_height_at_phys_maturity", "grain_moisture_percent", "iv_d_ec_percent_dm")) %>%
  mutate(trt = recode(trt,
  "avg_height_at_phys_maturity" = "Avg height at maturity (cm)",
  "grain_moisture_percent" = "Grain moisture (%)",
  "iv_d_ec_percent_dm" = "IV Digestibility (% DM)"
)) %>%
  mutate(trt = trt %>%
           str_wrap(width = 10)) %>%
  ggplot(aes(variety, mean_r)) +
  geom_bar(aes(fill = variety), stat = "identity", width = 0.4) +
  facet_grid(trt ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = paste0(gr)), vjust = -1, size =5, show.legend = FALSE)+
  scale_y_continuous(expand = expansion(mult = c(0, 0.55)))+
  scale_fill_manual(values = c("#999999", "#336600", "#996600"),
                    labels = c("AB Hague", "CDC Austenson", "Esma"))+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
       axis.text.x = element_blank(),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "bottom",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
       aspect.ratio =1.5/1
       )+
  coord_cartesian(clip = "off")+
  labs(x = "Variety", y = "", fill = "")
p1
```

```{r}
p2 <- data_graph %>%
  filter(trt %in% c("yield_bu_acre")) %>%
  mutate(trt = recode(trt,
  "yield_bu_acre" = "Yield (Bu/are)"
)) %>%
  ggplot(aes(variety, mean_r)) +
  geom_bar(aes(fill = variety), stat = "identity", width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = paste0(gr)), vjust = -1, size =5, show.legend = FALSE)+
  scale_y_continuous(expand = expansion(mult = c(0, 0.10)))+
 scale_fill_manual(values = c("#999999", "#336600", "#996600"),
                    labels = c("AB Hague", "CDC Austenson", "Esma"))+
  #scale_color_manual(values = c("a" = "black", "b" = "blue", "c" = "red"))+
  scale_x_discrete(labels = c("AB_Hague" = "AB Hague", "CDC_Austenson" = "CDC Austenson", "Esma" = "Esma"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
       axis.text.x = element_blank(),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "bottom",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
       aspect.ratio = 3/1,
       legend.key.size = unit(0.4, "cm")
       )+
  coord_cartesian(clip = "off")+
  labs(x = "Variety", y = "Yield (Bu/acre)",  fill = "")
p2
ggsave(plot = p2, "Final_Report/figure/Variety_impact_yield.png", width = 4, height = 4, dpi = 300)
```

```{r}
p3 <- data_graph %>%
  filter(trt %in% c("avg_height_at_phys_maturity")) %>%
  mutate(trt = recode(trt,
  "avg_height_at_phys_maturity" = "Plant height (cm)"
)) %>%
  ggplot(aes(variety, mean_r)) +
  geom_bar(aes(fill = variety), stat = "identity", width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = paste0(gr)), vjust = -1, size =5, show.legend = FALSE)+
  scale_y_continuous(expand = expansion(mult = c(0, 0.10)))+
  scale_fill_manual(values = c("#999999", "#336600", "#996600"),
                    labels = c("AB Hague", "CDC Austenson", "Esma"))+
  scale_x_discrete(labels = c("AB_Hague" = "AB Hague", "CDC_Austenson" = "CDC Austenson", "Esma" = "Esma"))+
   theme_bw()+
 theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
       axis.text.x = element_blank(),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "bottom",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95")
       )+
  coord_cartesian(clip = "off")+
  labs(x = "Variety", y = "Plant height (cm)", fill = "")
p3
ggsave("Final_Report/figure/Variety_impact_plant_height.png", width = 8, height = 4, dpi = 200)
```

```{r}
p4 <- data_graph %>%
  filter(trt %in% c("lodging_index_3")) %>%
  mutate(trt = recode(trt,
  "lodging_index_3" = "Lodging Index (%)"
))  %>% 
  ggplot(aes(variety, mean_r)) +
  geom_bar(aes(fill = variety), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =5, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600"),
                    labels = c("AB Hague", "CDC Austenson", "Esma"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
       axis.text.x = element_blank(),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "bottom",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95")
       )+
  coord_cartesian(ylim = c(0,9))+
  scale_y_continuous(breaks = seq(0,9,1))+
  labs(x = "Variety", y = "Lodging Index (%)", fill = "")
p4
ggsave("Final_Report/figure/Variety_impact_lodging.png", width = 8, height = 4, dpi = 200)
```

## Statistics Comparing PGR treatments by location

```{r}
#| message: false
#| warning: false
# Wrapper function for one location and one treatment
run_lsd_test <- function(data, location_name, outcome_name) {
  data_filtered <- data %>% 
    filter(location == location_name) %>%
    mutate(treatment = pgr_trt_name, outcome = .data[[outcome_name]])

  lsd_test_f2_05(data_filtered) %>%
    mutate(
      trt = outcome_name,
      location = location_name,
      result = case_when(
        is.na(gr) ~ "",
        TRUE ~ paste0(round(mean_r, 3), "Â±", round(SE_r, 3),  gr)
      ), .after = 2
    ) %>%
    select(-number)
}

# Loop over all combinations of locations and treatments
all_results_02 <- crossing(loc = locations, trt = treatments) %>%
  pmap_dfr(~run_lsd_test(cleaned_data_imputed, ..1, ..2))

# View results
head(all_results_02)
writexl::write_xlsx(all_results_02, "Final_Report/Data/all_results_location_pgr.xlsx")
```

### Graphs

```{r}
data_graph_02 <- all_results_02 %>% 
  select(-c(mean_se, result)) %>% 
  filter(!(treatment %in% c("lsd_value", "p_value")))

data_graph_lsd_pvalue_02 <- all_results_02 %>% 
  select(-c(mean_se, result, SE_r, gr)) %>% 
  filter(treatment %in% c("lsd_value", "p_value")) %>% 
  rename(test = treatment,
         test_value = mean_r) %>% 
  pivot_wider(names_from = test, values_from = test_value)

data_graph_02 <- data_graph_02 %>% 
  left_join(data_graph_lsd_pvalue_02)
```

#### PGR impact on lodging

```{r}
p5 <- data_graph_02 %>%
  filter(trt %in% c("lodging_index_3")) %>%
  mutate(trt = recode(trt,
  "lodging_index_3" = "Lodging Index (%)"
)) %>%
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =5, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  coord_cartesian(ylim = c(0,12))+
  scale_y_continuous(breaks = seq(0,9,1))+
  labs(x = "Treatment", y = "Lodging Index (%)", fill = "")
p5
ggsave("Final_Report/figure/PRG_impact_lodging.png", width = 8, height = 4, dpi = 200)
```

#### PGR impact on Plant height

```{r}
p6 <- data_graph_02 %>%
   filter(trt %in% c("avg_height_at_phys_maturity")) %>%
  mutate(trt = recode(trt,
  "avg_height_at_phys_maturity" = "Plant height (cm)"
)) %>%
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =5, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  labs(x = "Treatment", y = "Plant height (cm)", fill = "")
p6
ggsave("Final_Report/figure/PRG_impact_plantHeight.png", width = 8, height = 4, dpi = 200)
```

#### PGR impact on Yield

```{r}
p7 <- data_graph_02 %>%
   filter(trt %in% c("yield_bu_acre")) %>%
  mutate(trt = recode(trt,
  "yield_bu_acre" = "Yield (Bu/are)"
)) %>%
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =4, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  labs(x = "Treatment", y = "Yield (Bu/acre)", fill = "")
p7
ggsave("Final_Report/figure/PRG_impact_yieldBuAc.png", width = 8, height = 4, dpi = 200)
```

```{r}
p7 <- data_graph_02 %>%
   filter(trt %in% c("yield_adj_to_13_5_percent")) %>%
  mutate(trt = recode(trt,
  "yield_adj_to_13_5_percent" = "Yield (Kg/ha)"
)) %>%
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =4, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  labs(x = "Treatment", y = "Yield (Kg/ha)", fill = "")
p7
ggsave("Final_Report/figure/PRG_impact_yieldKgHa.png", width = 8, height = 4, dpi = 200)
```

## Statistics Comparing PGR impact on each Variety

### Impact of PGR on AB_Hague variety

```{r}
#| message: false
#| warning: false
data_PGR_ABHague <- cleaned_data_imputed %>% 
  filter(cultivar == "AB_Hague")
```

```{r}
#| message: false
#| warning: false
# Wrapper function for one location and one treatment
run_lsd_test <- function(data, location_name, outcome_name) {
  data_filtered <- data %>% 
    filter(location == location_name) %>%
    mutate(treatment = pgr_trt_name, outcome = .data[[outcome_name]])

  lsd_test_f2_05(data_filtered) %>%
    mutate(
      trt = outcome_name,
      location = location_name,
      result = case_when(
        is.na(gr) ~ "",
        TRUE ~ paste0(round(mean_r, 3), "Â±", round(SE_r, 3),  gr)
      ), .after = 2
    ) %>%
    select(-number)
}

# Loop over all combinations of locations and treatments
all_results_03 <- crossing(loc = locations, trt = treatments) %>%
  pmap_dfr(~run_lsd_test(data_PGR_ABHague, ..1, ..2))

# View results
head(all_results_03)
writexl::write_xlsx(all_results_03, "Final_Report/Data/all_results_location_pgr_ABHague.xlsx")
```

### Graphs

```{r}
data_graph_03 <- all_results_03 %>% 
  select(-c(mean_se, result)) %>% 
  filter(!(treatment %in% c("lsd_value", "p_value")))

data_graph_lsd_pvalue_03 <- all_results_03 %>% 
  select(-c(mean_se, result, SE_r, gr)) %>% 
  filter(treatment %in% c("lsd_value", "p_value")) %>% 
  rename(test = treatment,
         test_value = mean_r) %>% 
  pivot_wider(names_from = test, values_from = test_value)

data_graph_03 <- data_graph_03 %>% 
  left_join(data_graph_lsd_pvalue_03)
```

#### Yield

```{r}
p8 <- data_graph_03 %>%
   filter(trt %in% c("yield_adj_to_13_5_percent")) %>%
  mutate(trt = recode(trt,
  "yield_adj_to_13_5_percent" = "Yield (Kg/ha)"
)) %>%
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =4, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  labs(x = "Treatment", y = "Yield (Kg/ha)", fill = "", title = "AB Hague")
p8
ggsave("Final_Report/figure/ABHague_PRG_impact_yieldKgHa.png", width = 8, height = 4, dpi = 200)
```

```{r}
p9 <- data_graph_03 %>%
   filter(trt %in% c("yield_bu_acre")) %>%
  mutate(trt = recode(trt,
  "yield_bu_acre" = "Yield (Bu/are)")) %>% 
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =4, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  labs(x = "Treatment", y = "Yield (Bu/acre)", fill = "", title = "AB Hague")
p9
ggsave("Final_Report/figure/ABHague_PRG_impact_yieldBuAcre.png", width = 8, height = 4, dpi = 200)
```

#### Plant height

```{r}
p10 <- data_graph_03 %>%
   filter(trt %in% c("avg_height_at_phys_maturity")) %>%
  mutate(trt = recode(trt,
  "avg_height_at_phys_maturity" = "Plant height (cm)"
)) %>%
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =4, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  labs(x = "Treatment", y = "Plant height (cm)", fill = "", title = "AB Hague")
p10
ggsave("Final_Report/figure/ABHague_PRG_impact_PlantHeight.png", width = 8, height = 4, dpi = 200)
```

#### Lodging

```{r}
p11 <- data_graph_03 %>%
  filter(trt %in% c("lodging_index_3")) %>%
  mutate(trt = recode(trt,
  "lodging_index_3" = "Lodging Index (%)"
)) %>%
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =4, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  coord_cartesian(ylim = c(0,12))+
  scale_y_continuous(breaks = seq(0,9,1))+
  labs(x = "Treatment", y = "Lodging index", fill = "", title = "AB Hague")
p11
ggsave("Final_Report/figure/ABHague_PRG_impact_Lodging.png", width = 8, height = 4, dpi = 200)
```

### Impact of PGR on Esma variety

```{r}
#| message: false
#| warning: false
data_PGR_Esma <- cleaned_data_imputed %>% 
  filter(cultivar == "Esma")
```

```{r}
#| message: false
#| warning: false
# Wrapper function for one location and one treatment
run_lsd_test <- function(data, location_name, outcome_name) {
  data_filtered <- data %>% 
    filter(location == location_name) %>%
    mutate(treatment = pgr_trt_name, outcome = .data[[outcome_name]])

  lsd_test_f2_05(data_filtered) %>%
    mutate(
      trt = outcome_name,
      location = location_name,
      result = case_when(
        is.na(gr) ~ "",
        TRUE ~ paste0(round(mean_r, 3), "Â±", round(SE_r, 3),  gr)
      ), .after = 2
    ) %>%
    select(-number)
}

# Loop over all combinations of locations and treatments
all_results_04 <- crossing(loc = locations, trt = treatments) %>%
  pmap_dfr(~run_lsd_test(data_PGR_Esma, ..1, ..2))

# View results
head(all_results_04)
writexl::write_xlsx(all_results_04, "Final_Report/Data/all_results_location_pgr_Esma.xlsx")
```

### Graphs

```{r}
data_graph_04 <- all_results_04 %>% 
  select(-c(mean_se, result)) %>% 
  filter(!(treatment %in% c("lsd_value", "p_value")))

data_graph_lsd_pvalue_04 <- all_results_04 %>% 
  select(-c(mean_se, result, SE_r, gr)) %>% 
  filter(treatment %in% c("lsd_value", "p_value")) %>% 
  rename(test = treatment,
         test_value = mean_r) %>% 
  pivot_wider(names_from = test, values_from = test_value)

data_graph_04 <- data_graph_04 %>% 
  left_join(data_graph_lsd_pvalue_04)
```

#### Yield

```{r}
p12 <- data_graph_04 %>%
   filter(trt %in% c("yield_adj_to_13_5_percent")) %>%
  mutate(trt = recode(trt,
  "yield_adj_to_13_5_percent" = "Yield (Kg/ha)"
)) %>%
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =4, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  labs(x = "Treatment", y = "Yield (Kg/ha)", fill = "", title = "Esma")
p12
ggsave("Final_Report/figure/Esma_PRG_impact_yieldKgHa.png", width = 8, height = 4, dpi = 200)
```

```{r}
p13 <- data_graph_04 %>%
   filter(trt %in% c("yield_bu_acre")) %>%
  mutate(trt = recode(trt,
  "yield_bu_acre" = "Yield (Bu/are)")) %>% 
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =4, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  labs(x = "Treatment", y = "Yield (Bu/acre)", fill = "", title = "Esma")
p13
ggsave("Final_Report/figure/Esma_PRG_impact_yieldBuAcre.png", width = 8, height = 4, dpi = 200)
```

#### Plant height

```{r}
p14 <- data_graph_04 %>%
   filter(trt %in% c("avg_height_at_phys_maturity")) %>%
  mutate(trt = recode(trt,
  "avg_height_at_phys_maturity" = "Plant height (cm)"
)) %>%
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =4, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  labs(x = "Treatment", y = "Plant height (cm)", fill = "", title = "Esma")
p14
ggsave("Final_Report/figure/Esma_PRG_impact_PlantHeight.png", width = 8, height = 4, dpi = 200)
```

#### Lodging

```{r}
p15 <- data_graph_04 %>%
  filter(trt %in% c("lodging_index_3")) %>%
  mutate(trt = recode(trt,
  "lodging_index_3" = "Lodging Index (%)"
)) %>%
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =4, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  coord_cartesian(ylim = c(0,10))+
  scale_y_continuous(breaks = seq(0,9,1))+
  labs(x = "Treatment", y = "Lodging index", fill = "",  title = "Esma")
p15
ggsave("Final_Report/figure/Esma_PRG_impact_Lodging.png", width = 8, height = 4, dpi = 200)
```

## CDC Austenson

```{r}
#| message: false
#| warning: false
data_PGR_CDC_Austenson  <- cleaned_data_imputed %>% 
  filter(cultivar == "CDC_Austenson")
```

```{r}
#| message: false
#| warning: false
# Wrapper function for one location and one treatment
run_lsd_test <- function(data, location_name, outcome_name) {
  data_filtered <- data %>% 
    filter(location == location_name) %>%
    mutate(treatment = pgr_trt_name, outcome = .data[[outcome_name]])

  lsd_test_f2_05(data_filtered) %>%
    mutate(
      trt = outcome_name,
      location = location_name,
      result = case_when(
        is.na(gr) ~ "",
        TRUE ~ paste0(round(mean_r, 3), "Â±", round(SE_r, 3),  gr)
      ), .after = 2
    ) %>%
    select(-number)
}

# Loop over all combinations of locations and treatments
all_results_05 <- crossing(loc = locations, trt = treatments) %>%
  pmap_dfr(~run_lsd_test(data_PGR_CDC_Austenson, ..1, ..2))

# View results
head(all_results_05)
writexl::write_xlsx(all_results_05, "Final_Report/Data/all_results_location_pgr_CDC_Austenson.xlsx")
```

### Graphs

```{r}
data_graph_05 <- all_results_05 %>% 
  select(-c(mean_se, result)) %>% 
  filter(!(treatment %in% c("lsd_value", "p_value")))

data_graph_lsd_pvalue_05 <- all_results_05 %>% 
  select(-c(mean_se, result, SE_r, gr)) %>% 
  filter(treatment %in% c("lsd_value", "p_value")) %>% 
  rename(test = treatment,
         test_value = mean_r) %>% 
  pivot_wider(names_from = test, values_from = test_value)

data_graph_05 <- data_graph_05 %>% 
  left_join(data_graph_lsd_pvalue_05)
```

#### Yield

```{r}
p16 <- data_graph_05 %>%
   filter(trt %in% c("yield_adj_to_13_5_percent")) %>%
  mutate(trt = recode(trt,
  "yield_adj_to_13_5_percent" = "Yield (Kg/ha)"
)) %>%
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =4, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  labs(x = "Treatment", y = "Yield (Kg/ha)", fill = "",  title = "CDC Austenson")
p16
ggsave("Final_Report/figure/CDCAust_PRG_impact_yieldKgHa.png", width = 8, height = 4, dpi = 200)
```

```{r}
p17 <- data_graph_05 %>%
   filter(trt %in% c("yield_bu_acre")) %>%
  mutate(trt = recode(trt,
  "yield_bu_acre" = "Yield (Bu/are)")) %>% 
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =4, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  labs(x = "Treatment", y = "Yield (Bu/acre)", fill = "",  title = "CDC Austenson")
p17
ggsave("Final_Report/figure/CDCAust_PRG_impact_yieldBuAcre.png", width = 8, height = 4, dpi = 200)
```

#### Plant height

```{r}
p18 <- data_graph_05 %>%
   filter(trt %in% c("avg_height_at_phys_maturity")) %>%
  mutate(trt = recode(trt,
  "avg_height_at_phys_maturity" = "Plant height (cm)"
)) %>%
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =4, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  labs(x = "Treatment", y = "Plant height (cm)", fill = "",  title = "CDC Austenson")
p18
ggsave("Final_Report/figure/CDCAust_PRG_impact_PlantHeight.png", width = 8, height = 4, dpi = 200)
```

#### Lodging

```{r}
p19 <- data_graph_05 %>%
  filter(trt %in% c("lodging_index_3")) %>%
  mutate(trt = recode(trt,
  "lodging_index_3" = "Lodging Index (%)"
)) %>%
mutate(treatment = case_when(
    treatment == "M125_30-32" ~ "T5",
    treatment == "M125_37" ~ "T6",
    treatment == "M62.5_21-24" ~ "T2",
    treatment == "M62.5_21-24 + M62.5_30-32" ~ "T7",
    treatment == "M62.5_21-24 + M62.5_37" ~ "T8",
    treatment == "M62.5_30-32" ~ "T3",
    treatment == "M62.5_30-32 + M62.5_37" ~ "T9",
    treatment == "M62.5_37" ~ "T4",
    .default =  "T1"
  )) %>% 
  ggplot(aes(treatment, mean_r)) +
  geom_bar(aes(fill = treatment), stat = "identity", show.legend = TRUE, width = 0.5) +
  facet_grid(. ~ location, scales = "free_y") +
  geom_errorbar(aes(ymin = mean_r - SE_r, ymax = mean_r + SE_r), width = 0.2)+
  geom_text(aes(label = gr, y = mean_r + SE_r + 0.3), vjust = -0.3, size =4, show.legend = FALSE)+
  scale_fill_manual(values = c("#999999", "#336600", "#996600", "#66FFFF", "#0066CC", "#660033", "#009999", "#000000", "#FF3300"))+
   theme_bw()+
  theme(strip.text.y = element_text(size = 12, face = "bold", angle = 0), 
        strip.text.x = element_text(size = 12, face = "bold"),
        axis.text.y = element_text(vjust = 0.25, size = 12, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
       panel.grid.major = element_line(colour = "gray95"),
       panel.grid.minor = element_line(colour = "gray95"),
     legend.key.size = unit(0.2, "cm")
       )+
  coord_cartesian(ylim = c(0,10))+
  scale_y_continuous(breaks = seq(0,9,1))+
  labs(x = "Treatment", y = "Lodging index", fill = "", title = "CDC Austenson")
p19
ggsave("Final_Report/figure/CDCAust_PRG_impact_Lodging.png", width = 8, height = 4, dpi = 200)
```

## Mixed modeling

### Yield

```{r}
#| message: false
#| warning: false
# Set a random seed for reproducibility
set.seed(123)

# Fit the mixed model with year & location as random effects
reg_mod <- lmer(yield_bu_acre ~ cultivar + pgr_trt_name + 
                (1 | year) + (1 | location), 
                data = cleaned_data_imputed %>% mutate(pgr_trt_name = fct_relevel(pgr_trt_name, "No_PGR"),
                                       cultivar = fct_relevel(cultivar, "CDC_Austenson")))

# Extract fixed effects with p-values
fixed_effects <- broom.mixed::tidy(reg_mod, effects = "fixed") %>%
  filter(term != "(Intercept)")

# Extract confidence intervals for fixed effects
conf_int <- confint(reg_mod, method = "Wald") %>%  # Compute 95% CIs
  as.data.frame() %>%
  rownames_to_column("term") %>%
  filter(term %in% fixed_effects$term) %>%
  rename(ci_lower = `2.5 %`, ci_upper = `97.5 %`)

# Merge CIs with fixed effects
fixed_effects <- fixed_effects %>%
  left_join(conf_int, by = "term") %>%
  mutate(
    p_signif = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01  ~ "**",
      p.value < 0.05  ~ "*",
      TRUE ~ ""
    )
  )

# Extract random effects (variance components) - No p-values here
random_effects <- broom.mixed::tidy(reg_mod, effects = "ran_pars") %>%
  select(-term) %>% 
  rename(term = group) %>% 
  mutate(
    term = str_replace(term, "sd__", ""),  # Clean term names
    effect = "Random",
    p_signif = "",  # No p-values for random effects
    ci_lower = NA,  # No CIs for random effects
    ci_upper = NA
  )

# Combine fixed and random effects
model_results <- bind_rows(fixed_effects, random_effects)

# Assign grouping categories
model_results <- model_results %>%
  filter(term != "Residual") %>%
  mutate(category = case_when(
    grepl("location", term) ~ "Location",
    grepl("year", term) ~ "Year",
    grepl("cultivar", term) ~ "Cultivar",
    grepl("pgr_trt_name", term) ~ "PGR Treatment",
    TRUE ~ "Other"
  )) %>% 
  mutate(category = fct_relevel(category, "Location", "Year"),  # Convert to factor for correct order
         significant_or_not = case_when(p.value < 0.05 ~ "Significant",
                                        p.value >= 0.05 ~ "Not Significant",
                                        .default = "other"
           
         )) %>% 
  mutate(term = case_when(
    grepl("CDC_Austenson", term) ~ "CDC Austenson",
    grepl("cultivarAB_Hague", term) ~ "AB Hague",
    grepl("Esma", term) ~ "Esma",
   # grepl("TR18647", term) ~ "TR18647",
    grepl("M125_30-32", term) ~ "M125g SE",
    grepl("M125_37", term) ~ "M125g Flag LE + Fungicide",
    term == "pgr_trt_nameM62.5_21-24" ~ "M62.5g ET",
    term == "pgr_trt_nameM62.5_21-24 + M62.5_30-32" ~ "(M62.5g ET + Herbicide) | M62.5g SE",
    term == "pgr_trt_nameM62.5_21-24 + M62.5_37" ~ "(M62.5g ET + Herbicide) | (M62.5g FLE + Fungicide)",
    term == "pgr_trt_nameM62.5_30-32" ~ "M62.5g SE",
    term == "pgr_trt_nameM62.5_30-32 + M62.5_37" ~ "M62.5g SE | (M62.5g FLE + Fungicide)",
    term == "pgr_trt_nameM62.5_37" ~ "M62.5g Flag LE + Fungicide",
    TRUE ~ term
  )) 


```

```{r}
#| message: false
#| warning: false
# Define custom order for PGR treatments
custom_order <- c("M62.5g SE | (M62.5g FLE + Fungicide)", 
                  "(M62.5g ET + Herbicide) | (M62.5g FLE + Fungicide)", 
                  "(M62.5g ET + Herbicide) | M62.5g SE", 
                  "M125g Flag LE + Fungicide",
                  "M125g SE",
                  "M62.5g Flag LE + Fungicide",
                  "M62.5g SE",
                  "M62.5g ET")

# Apply manual order to the "term" column for PGR treatments only
model_results <- model_results %>%
  mutate(term = fct_relevel(term, custom_order))
# Plot with significance stars and confidence intervals
ggplot(model_results, aes(x = estimate, y = term, shape = effect, color = significant_or_not)) +
  geom_point(size = 2) +
  geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.2) +  # Confidence intervals
  geom_text(aes(label = paste(round(estimate, 1), p_signif)), hjust = 0.9, vjust = -0.8, size = 3, fontface = "bold", show.legend = F) +  # Add estimate & p-value stars
  facet_grid(category ~., scales = "free_y", space = "free_y") +  # Group by category
  geom_vline(xintercept = 0, lwd = 0.2, linetype = "dashed") +  # Vertical line at zero
  scale_shape_manual(values = c(16, 17)) +  # Different shapes for fixed and random effects
  scale_color_manual(values = c("gray60", "gray10", "green4")) +  # Different colors for fixed and random
  labs(title = "",
       x = "Estimated Effect (Bu/ac)", y = "", #caption = "Yield Mixed Model Effects with Confidence Intervals",
       shape = "Effect Type", color = "P.Value") +
  coord_cartesian(xlim = c(-30, 60))+
  theme_bw()+
  guides(color = "none")+
  theme(strip.text.y = element_text(angle = 0))
ggsave("Final_Report/figure/Yield_mixed_modeling.png", width = 8, height = 5, dpi = 600)
```

```{r}
#| message: false
#| warning: false
# Set a random seed for reproducibility
set.seed(123)

# Fit the mixed model with year & location as random effects
reg_mod <- lmer(yield_adj_to_13_5_percent ~ cultivar + pgr_trt_name + 
                (1 | year) + (1 | location), 
                data = cleaned_data_imputed %>% mutate(pgr_trt_name = fct_relevel(pgr_trt_name, "No_PGR"),
                                       cultivar = fct_relevel(cultivar, "CDC_Austenson")))

# Extract fixed effects with p-values
fixed_effects <- broom.mixed::tidy(reg_mod, effects = "fixed") %>%
  filter(term != "(Intercept)")

# Extract confidence intervals for fixed effects
conf_int <- confint(reg_mod, method = "Wald") %>%  # Compute 95% CIs
  as.data.frame() %>%
  rownames_to_column("term") %>%
  filter(term %in% fixed_effects$term) %>%
  rename(ci_lower = `2.5 %`, ci_upper = `97.5 %`)

# Merge CIs with fixed effects
fixed_effects <- fixed_effects %>%
  left_join(conf_int, by = "term") %>%
  mutate(
    p_signif = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01  ~ "**",
      p.value < 0.05  ~ "*",
      TRUE ~ ""
    )
  )

# Extract random effects (variance components) - No p-values here
random_effects <- broom.mixed::tidy(reg_mod, effects = "ran_pars") %>%
  select(-term) %>% 
  rename(term = group) %>% 
  mutate(
    term = str_replace(term, "sd__", ""),  # Clean term names
    effect = "Random",
    p_signif = "",  # No p-values for random effects
    ci_lower = NA,  # No CIs for random effects
    ci_upper = NA
  )

# Combine fixed and random effects
model_results <- bind_rows(fixed_effects, random_effects)

# Assign grouping categories
model_results <- model_results %>%
  filter(term != "Residual") %>%
  mutate(category = case_when(
    grepl("location", term) ~ "Location",
    grepl("year", term) ~ "Year",
    grepl("cultivar", term) ~ "Cultivar",
    grepl("pgr_trt_name", term) ~ "PGR Treatment",
    TRUE ~ "Other"
  )) %>% 
  mutate(category = fct_relevel(category, "Location", "Year"),  # Convert to factor for correct order
         significant_or_not = case_when(p.value < 0.05 ~ "Significant",
                                        p.value >= 0.05 ~ "Not Significant",
                                        .default = "other"
           
         )) %>% 
  mutate(term = case_when(
    grepl("CDC_Austenson", term) ~ "CDC Austenson",
    grepl("cultivarAB_Hague", term) ~ "AB Hague",
    grepl("Esma", term) ~ "Esma",
    grepl("M125_30-32", term) ~ "M125g SE",
    grepl("M125_37", term) ~ "M125g Flag LE + Fungicide",
    term == "pgr_trt_nameM62.5_21-24" ~ "M62.5g ET",
    term == "pgr_trt_nameM62.5_21-24 + M62.5_30-32" ~ "(M62.5g ET + Herbicide) | M62.5g SE",
    term == "pgr_trt_nameM62.5_21-24 + M62.5_37" ~ "(M62.5g ET + Herbicide) | (M62.5g FLE + Fungicide)",
    term == "pgr_trt_nameM62.5_30-32" ~ "M62.5g SE",
    term == "pgr_trt_nameM62.5_30-32 + M62.5_37" ~ "M62.5g SE | (M62.5g FLE + Fungicide)",
    term == "pgr_trt_nameM62.5_37" ~ "M62.5g Flag LE + Fungicide",
    TRUE ~ term
  )) 


```

```{r}
#| message: false
#| warning: false
# Define custom order for PGR treatments
custom_order <- c("M62.5g SE | (M62.5g FLE + Fungicide)", 
                  "(M62.5g ET + Herbicide) | (M62.5g FLE + Fungicide)", 
                  "(M62.5g ET + Herbicide) | M62.5g SE", 
                  "M125g Flag LE + Fungicide",
                  "M125g SE",
                  "M62.5g Flag LE + Fungicide",
                  "M62.5g SE",
                  "M62.5g ET")

# Apply manual order to the "term" column for PGR treatments only
model_results <- model_results %>%
  mutate(term = fct_relevel(term, custom_order))
# Plot with significance stars and confidence intervals
ggplot(model_results, aes(x = estimate, y = term, shape = effect, color = significant_or_not)) +
  geom_point(size = 2) +
  geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.2) +  # Confidence intervals
  geom_text(aes(label = paste(round(estimate, 1), p_signif)), hjust = 0.9, vjust = -0.8, size = 3, fontface = "bold", show.legend = F) +  # Add estimate & p-value stars
  facet_grid(category ~., scales = "free_y", space = "free_y") +  # Group by category
  geom_vline(xintercept = 0, lwd = 0.2, linetype = "dashed") +  # Vertical line at zero
  scale_shape_manual(values = c(16, 17)) +  # Different shapes for fixed and random effects
  scale_color_manual(values = c("gray60", "gray10", "green4")) +  # Different colors for fixed and random
  labs(title = "",
       x = "Estimated Effect (Kg/ha)", y = "", caption = "Yield Mixed Model Effects with Confidence Intervals",
       shape = "Effect Type", color = "P.Value") +
  coord_cartesian(xlim = c(-1000, 3000))+
  theme_bw()+
  guides(color = "none")+
  theme(strip.text.y = element_text(angle = 0))
ggsave("Final_Report/figure/Yield_mixed_modeling_kgHa.png", width = 8, height = 5, dpi = 600)
```

## Lodging

```{r}
# Set a random seed for reproducibility
set.seed(123)

# Fit the mixed model with year & location as random effects
reg_mod_height <- lmer(lodging_avg ~ cultivar + pgr_trt_name + 
                (1 | year) + (1 | location), 
                data = cleaned_data_imputed %>% mutate(pgr_trt_name = fct_relevel(pgr_trt_name, "No_PGR"),
                                       cultivar = fct_relevel(cultivar, "CDC_Austenson")))

# Extract fixed effects with p-values
fixed_effects <- broom.mixed::tidy(reg_mod_height, effects = "fixed") %>%
  filter(term != "(Intercept)")

# Extract confidence intervals for fixed effects
conf_int <- confint(reg_mod_height, method = "Wald") %>%  # Compute 95% CIs
  as.data.frame() %>%
  rownames_to_column("term") %>%
  filter(term %in% fixed_effects$term) %>%
  rename(ci_lower = `2.5 %`, ci_upper = `97.5 %`)

# Merge CIs with fixed effects
fixed_effects <- fixed_effects %>%
  left_join(conf_int, by = "term") %>%
  mutate(
    p_signif = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01  ~ "**",
      p.value < 0.05  ~ "*",
      TRUE ~ ""
    )
  )

# Extract random effects (variance components) - No p-values here
random_effects <- broom.mixed::tidy(reg_mod_height, effects = "ran_pars") %>%
  select(-term) %>% 
  rename(term = group) %>% 
  mutate(
    term = str_replace(term, "sd__", ""),  # Clean term names
    effect = "Random",
    p_signif = "",  # No p-values for random effects
    ci_lower = NA,  # No CIs for random effects
    ci_upper = NA
  )

# Combine fixed and random effects
model_results <- bind_rows(fixed_effects, random_effects)

# Assign grouping categories
model_results_height <- model_results %>%
  filter(term != "Residual") %>%
  mutate(category = case_when(
    grepl("location", term) ~ "Location",
    grepl("year", term) ~ "Year",
    grepl("cultivar", term) ~ "Cultivar",
    grepl("pgr_trt_name", term) ~ "PGR Treatment",
    TRUE ~ "Other"
  )) %>% 
  mutate(category = fct_relevel(category, "Location", "Year"),  # Convert to factor for correct order
         significant_or_not = case_when(p.value < 0.05 ~ "Significant",
                                        p.value >= 0.05 ~ "Not Significant",
                                        .default = "other"
           
         )) %>% 
  mutate(term = case_when(
    grepl("CDC_Austenson", term) ~ "CDC Austenson",
    grepl("cultivarAB_Hague", term) ~ "AB Hague",
    grepl("Esma", term) ~ "Esma",
   # grepl("TR18647", term) ~ "TR18647",
    grepl("M125_30-32", term) ~ "M125g SE",
    grepl("M125_37", term) ~ "M125g Flag LE + Fungicide",
    term == "pgr_trt_nameM62.5_21-24" ~ "M62.5g ET",
    term == "pgr_trt_nameM62.5_21-24 + M62.5_30-32" ~ "(M62.5g ET + Herbicide) | M62.5g SE",
    term == "pgr_trt_nameM62.5_21-24 + M62.5_37" ~ "(M62.5g ET + Herbicide) | (M62.5g FLE + Fungicide)",
    term == "pgr_trt_nameM62.5_30-32" ~ "M62.5g SE",
    term == "pgr_trt_nameM62.5_30-32 + M62.5_37" ~ "M62.5g SE | (M62.5g FLE + Fungicide)",
    term == "pgr_trt_nameM62.5_37" ~ "M62.5g Flag LE + Fungicide",
    TRUE ~ term
  )) 


```

```{r}
# Define custom order for PGR treatments
custom_order <- c("M62.5g SE | (M62.5g FLE + Fungicide)", 
                  "(M62.5g ET + Herbicide) | (M62.5g FLE + Fungicide)", 
                  "(M62.5g ET + Herbicide) | M62.5g SE", 
                  "M125g Flag LE + Fungicide",
                  "M125g SE",
                  "M62.5g Flag LE + Fungicide",
                  "M62.5g SE",
                  "M62.5g ET")

# Apply manual order to the "term" column for PGR treatments only
model_results_height <- model_results_height %>%
  mutate(term = fct_relevel(term, custom_order))

# Plot with reordered PGR treatments
ggplot(model_results_height, aes(x = estimate, y = term, shape = effect, color = significant_or_not)) +
  geom_point(size = 2) +
  geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.2) +  # Confidence intervals
  geom_text(aes(label = paste(round(estimate, 2), p_signif)), hjust = 0.9, vjust = -0.8, size = 3, fontface = "bold", show.legend = F) +  # Add estimate & p-value stars
  facet_grid(category ~., scales = "free_y", space = "free_y") +  # Group by category
  geom_vline(xintercept = 0, lwd = 0.2, linetype = "dashed") +  # Vertical line at zero
  scale_shape_manual(values = c(16, 17)) +  # Different shapes for fixed and random effects
  scale_color_manual(values = c("gray60", "gray10", "green4")) +   # Different colors for fixed and random
  labs(title = "", caption = "Lodging index Mixed Model Effects with Confidence Intervals",
       x = "Estimated Effect", y = "",
       shape = "Effect Type", color = "P.Value") +
  theme_bw() +
  guides(color = "none") +
  theme(strip.text.y = element_text(angle = 0))

ggsave("Final_Report/figure/lodging_index_modeling.png", width = 8, height = 5, dpi = 600)
```

## Plant height

```{r}
# Set a random seed for reproducibility
set.seed(123)

# Fit the mixed model with year & location as random effects
reg_mod_height <- lmer(avg_height_at_phys_maturity ~ cultivar + pgr_trt_name + 
                (1 | year) + (1 | location), 
                data = cleaned_data_imputed %>% mutate(pgr_trt_name = fct_relevel(pgr_trt_name, "No_PGR"),
                                       cultivar = fct_relevel(cultivar, "CDC_Austenson")))

# Extract fixed effects with p-values
fixed_effects <- broom.mixed::tidy(reg_mod_height, effects = "fixed") %>%
  filter(term != "(Intercept)")

# Extract confidence intervals for fixed effects
conf_int <- confint(reg_mod_height, method = "Wald") %>%  # Compute 95% CIs
  as.data.frame() %>%
  rownames_to_column("term") %>%
  filter(term %in% fixed_effects$term) %>%
  rename(ci_lower = `2.5 %`, ci_upper = `97.5 %`)

# Merge CIs with fixed effects
fixed_effects <- fixed_effects %>%
  left_join(conf_int, by = "term") %>%
  mutate(
    p_signif = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01  ~ "**",
      p.value < 0.05  ~ "*",
      TRUE ~ ""
    )
  )

# Extract random effects (variance components) - No p-values here
random_effects <- broom.mixed::tidy(reg_mod_height, effects = "ran_pars") %>%
  select(-term) %>% 
  rename(term = group) %>% 
  mutate(
    term = str_replace(term, "sd__", ""),  # Clean term names
    effect = "Random",
    p_signif = "",  # No p-values for random effects
    ci_lower = NA,  # No CIs for random effects
    ci_upper = NA
  )

# Combine fixed and random effects
model_results <- bind_rows(fixed_effects, random_effects)

# Assign grouping categories
model_results_height <- model_results %>%
  filter(term != "Residual") %>%
  mutate(category = case_when(
    grepl("location", term) ~ "Location",
    grepl("year", term) ~ "Year",
    grepl("cultivar", term) ~ "Cultivar",
    grepl("pgr_trt_name", term) ~ "PGR Treatment",
    TRUE ~ "Other"
  )) %>% 
  mutate(category = fct_relevel(category, "Location", "Year"),  # Convert to factor for correct order
        significant_or_not = case_when(p.value < 0.05 ~ "Significant",
                                        p.value >= 0.05 ~ "Not Significant",
                                        .default = "other"
           
         )) %>% 
 mutate(term = case_when(
    grepl("CDC_Austenson", term) ~ "CDC Austenson",
    grepl("cultivarAB_Hague", term) ~ "AB Hague",
    grepl("Esma", term) ~ "Esma",
   # grepl("TR18647", term) ~ "TR18647",
    grepl("M125_30-32", term) ~ "M125g SE",
    grepl("M125_37", term) ~ "M125g Flag LE + Fungicide",
    term == "pgr_trt_nameM62.5_21-24" ~ "M62.5g ET",
    term == "pgr_trt_nameM62.5_21-24 + M62.5_30-32" ~ "(M62.5g ET + Herbicide) | M62.5g SE",
    term == "pgr_trt_nameM62.5_21-24 + M62.5_37" ~ "(M62.5g ET + Herbicide) | (M62.5g FLE + Fungicide)",
    term == "pgr_trt_nameM62.5_30-32" ~ "M62.5g SE",
    term == "pgr_trt_nameM62.5_30-32 + M62.5_37" ~ "M62.5g SE | (M62.5g FLE + Fungicide)",
    term == "pgr_trt_nameM62.5_37" ~ "M62.5g Flag LE + Fungicide",
    TRUE ~ term
  )) 
```

```{r}
# Define custom order for PGR treatments
custom_order <- c("M62.5g SE | (M62.5g FLE + Fungicide)", 
                  "(M62.5g ET + Herbicide) | (M62.5g FLE + Fungicide)", 
                  "(M62.5g ET + Herbicide) | M62.5g SE", 
                  "M125g Flag LE + Fungicide",
                  "M125g SE",
                  "M62.5g Flag LE + Fungicide",
                  "M62.5g SE",
                  "M62.5g ET")

# Apply manual order to the "term" column for PGR treatments only
model_results_height <- model_results_height %>%
  mutate(term = fct_relevel(term, custom_order))
# Plot with significance stars and confidence intervals
ggplot(model_results_height, aes(x = estimate, y = term, shape = effect, color = significant_or_not)) +
  geom_point(size = 2) +
  geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.2) +  # Confidence intervals
  geom_text(aes(label = paste(round(estimate, 1), p_signif)), hjust = 0.9, vjust = -0.8, size = 3, fontface = "bold", show.legend = F) +  # Add estimate & p-value stars
  facet_grid(category ~., scales = "free_y", space = "free_y") +  # Group by category
  geom_vline(xintercept = 0, lwd = 0.2, linetype = "dashed") +  # Vertical line at zero
  scale_shape_manual(values = c(16, 17)) +  # Different shapes for fixed and random effects
  scale_color_manual(values = c("gray60", "gray10", "green4")) +   # Different colors for fixed and random
  labs(title = "", caption = "Plant Height Mixed Model Effects with Confidence Intervals",
       x = "Estimated Effect (cm)", y = "",
       shape = "Effect Type", color = "P.Value") +
  coord_cartesian(xlim = c(-30, 30))+
  theme_bw()+
   guides(color = "none")+
  theme(strip.text.y = element_text(angle = 0))
ggsave("Final_Report/figure/avg_height_at_phys_maturity_modeling.png", width = 8, height = 5, dpi = 600)
```
